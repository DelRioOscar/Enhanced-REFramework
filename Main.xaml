<Activity mc:Ignorable="sap sap2010 sads" x:Class="Main" this:Main.in_wbType="MainTask" this:Main.in_wbLevel="0" this:Main.in_wbParent="[string.Empty]"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities"
 xmlns:njl="clr-namespace:Newtonsoft.Json.Linq;assembly=Newtonsoft.Json"
 xmlns:s="clr-namespace:System;assembly=mscorlib"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:sd="clr-namespace:System.Data;assembly=System.Data"
 xmlns:ss="clr-namespace:System.Security;assembly=mscorlib"
 xmlns:this="clr-namespace:"
 xmlns:ui="http://schemas.uipath.com/workflow/activities"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_wbType" Type="InArgument(x:String)" />
    <x:Property Name="in_wbLevel" Type="InArgument(x:Int32)" />
    <x:Property Name="in_wbParent" Type="InArgument(x:String)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap2010:WorkflowViewState.IdRef>Main2_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>Newtonsoft.Json.Linq</x:String>
      <x:String>Newtonsoft.Json</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>System.Net</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.Core</AssemblyReference>
      <AssemblyReference>UiPath.Core.Activities</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.VisualStudio.Services.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <StateMachine sap2010:Annotation.AnnotationText="-- ReFrameWork - Robotic Enterprise Framework --&#xA;-- TEMPLATE--" DisplayName="General Business Process" sap2010:WorkflowViewState.IdRef="StateMachine_1">
    <StateMachine.InitialState>
      <State x:Name="__ReferenceID0" sap2010:Annotation.AnnotationText="Read Config, Init Applications" DisplayName="Init State" sap2010:WorkflowViewState.IdRef="State_2">
        <State.Entry>
          <TryCatch sap2010:Annotation.AnnotationText="Initialisation work block." DisplayName="wbInit" sap2010:WorkflowViewState.IdRef="TryCatch_17">
            <TryCatch.Variables>
              <Variable x:TypeArguments="s:DateTime" Default="[datetime.Now]" Name="wbInit_StartTime" />
              <Variable x:TypeArguments="scg:Dictionary(x:String, x:Object)" Default="[New system.Collections.Generic.Dictionary(Of String, Object) from { {&quot;Successful&quot;, 0}, {&quot;Failed&quot;, 0} }]" Name="wbInit_Audit" />
              <Variable x:TypeArguments="x:String" Default="[in_wbType+&quot;, &quot;+&quot;Initialization State&quot;]" Name="wbInit_Type" />
              <Variable x:TypeArguments="x:String" Default="[wbMain_Type]" Name="wbInit_Parent" />
              <Variable x:TypeArguments="x:Int32" Default="[wbMain_Level+1]" Name="wbInit_Level" />
            </TryCatch.Variables>
            <TryCatch.Try>
              <Sequence DisplayName="Try processing wbInit" sap2010:WorkflowViewState.IdRef="Sequence_272">
                <Sequence sap2010:Annotation.AnnotationText="Initialize data here." DisplayName="Initialization" sap2010:WorkflowViewState.IdRef="Sequence_264">
                  <Assign DisplayName="Initialize TransactionItem" sap2010:WorkflowViewState.IdRef="Assign_104">
                    <Assign.To>
                      <OutArgument x:TypeArguments="ui:QueueItem">[TransactionItem]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="ui:QueueItem">[new Uipath.Core.QueueItem]</InArgument>
                    </Assign.Value>
                  </Assign>
                </Sequence>
                <Sequence sap2010:Annotation.AnnotationText="This section is needed for the correct operation of the framework. Edits here break things." DisplayName="System - Reserved" sap2010:WorkflowViewState.IdRef="Sequence_269">
                  <Sequence DisplayName="Reset Env in case of SystemError" sap2010:WorkflowViewState.IdRef="Sequence_265">
                    <If Condition="[SystemError isNot Nothing]" DisplayName="If System Error Reset Env" sap2010:WorkflowViewState.IdRef="If_40">
                      <If.Then>
                        <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke CloseAllApplications workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_84" UnSafe="False" WorkflowFileName="ProcessLayer\CloseAllApplications.xaml">
                          <ui:InvokeWorkflowFile.Arguments>
                            <InArgument x:TypeArguments="x:String" x:Key="in_wbType">[in_wbType+", "+"Close All Applications"]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_wbParent">[wbInit_Type]</InArgument>
                            <InArgument x:TypeArguments="x:Int32" x:Key="in_wbLevel">[wbInit_Level+1]</InArgument>
                            <InOutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="io_Audit">[wbInit_Audit]</InOutArgument>
                          </ui:InvokeWorkflowFile.Arguments>
                        </ui:InvokeWorkflowFile>
                      </If.Then>
                    </If>
                  </Sequence>
                  <Sequence DisplayName="Initialization" sap2010:WorkflowViewState.IdRef="Sequence_266">
                    <Assign DisplayName="Initialize SystemError" sap2010:WorkflowViewState.IdRef="Assign_105">
                      <Assign.To>
                        <OutArgument x:TypeArguments="s:Exception">[SystemError]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="s:Exception">[Nothing]</InArgument>
                      </Assign.Value>
                    </Assign>
                  </Sequence>
                  <If Condition="[Config is Nothing]" DisplayName="If first run - read Config file" sap2010:WorkflowViewState.IdRef="If_43">
                    <If.Then>
                      <Sequence DisplayName="First Run" sap2010:WorkflowViewState.IdRef="Sequence_268">
                        <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke InitAllSettings workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_85" UnSafe="False" WorkflowFileName="Framework\InitAllSettings.xaml">
                          <ui:InvokeWorkflowFile.Arguments>
                            <InArgument x:TypeArguments="x:String" x:Key="in_ConfigFile">Data\Config.xlsx</InArgument>
                            <InArgument x:TypeArguments="s:String[]" x:Key="in_ConfigSheets">[{"Settings", "Constants"}]</InArgument>
                            <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="out_Config">[Config]</OutArgument>
                          </ui:InvokeWorkflowFile.Arguments>
                        </ui:InvokeWorkflowFile>
                        <ui:AddLogFields sap2010:Annotation.AnnotationText="wbBusinessProcessName" DisplayName="Add log fields" sap2010:WorkflowViewState.IdRef="AddLogFields_100">
                          <ui:AddLogFields.Fields>
                            <InArgument x:TypeArguments="x:String" x:Key="wbBusinessProcessName">[Config.Item("wbBusinessProcessName").ToString]</InArgument>
                          </ui:AddLogFields.Fields>
                        </ui:AddLogFields>
                        <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke KillAllProcesses workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_86" UnSafe="False" WorkflowFileName="ProcessLayer\KillAllProcesses.xaml">
                          <ui:InvokeWorkflowFile.Arguments>
                            <scg:Dictionary x:TypeArguments="x:String, Argument" />
                          </ui:InvokeWorkflowFile.Arguments>
                        </ui:InvokeWorkflowFile>
                        <If Condition="[TransactionItem isNot Nothing AndAlso (TransactionItem.GetType is GetType(Uipath.Core.QueueItem))]" DisplayName="If TransactionItem is a QueueItem" sap2010:WorkflowViewState.IdRef="If_42">
                          <If.Then>
                            <Sequence DisplayName="Obtain Information about Queue" sap2010:WorkflowViewState.IdRef="Sequence_267">
                              <Sequence.Variables>
                                <Variable x:TypeArguments="x:String" Name="token" />
                                <Variable x:TypeArguments="njl:JObject" Name="jsonQueueProcessingStatus" />
                                <Variable x:TypeArguments="x:String" Name="username" />
                                <Variable x:TypeArguments="ss:SecureString" Name="securePassword" />
                              </Sequence.Variables>
                              <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke GetAppCredentials workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_87" UnSafe="False" WorkflowFileName="Framework\GetAppCredentials.xaml">
                                <ui:InvokeWorkflowFile.Arguments>
                                  <OutArgument x:TypeArguments="x:String" x:Key="out_Username">[username]</OutArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="in_Credential">[Config("OrchestratorCredentialName").ToString]</InArgument>
                                  <OutArgument x:TypeArguments="ss:SecureString" x:Key="out_Password">[securePassword]</OutArgument>
                                </ui:InvokeWorkflowFile.Arguments>
                              </ui:InvokeWorkflowFile>
                              <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke GetAuthenticateToken workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_88" UnSafe="False" WorkflowFileName="Framework\Orchestrator\GetAuthenticateToken.xaml">
                                <ui:InvokeWorkflowFile.Arguments>
                                  <InArgument x:TypeArguments="x:String" x:Key="in_orchestratorURL">[Config("OrchestratorURL").ToString]</InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="in_tenancyName">[Config("OrchestratorTenancyName").ToString]</InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="in_usernameOrEmailAddress">[username]</InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="in_password">[new System.Net.NetworkCredential(string.Empty, securePassword).Password]</InArgument>
                                  <OutArgument x:TypeArguments="x:String" x:Key="out_token">[token]</OutArgument>
                                </ui:InvokeWorkflowFile.Arguments>
                              </ui:InvokeWorkflowFile>
                              <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke GetQueueProcessingStatus workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_89" UnSafe="False" WorkflowFileName="Framework\Orchestrator\Queues\GetQueueProcessingStatus.xaml">
                                <ui:InvokeWorkflowFile.Arguments>
                                  <InArgument x:TypeArguments="x:String" x:Key="in_orchestratorURL">[Config("OrchestratorURL").ToString]</InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="in_token">[token]</InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="in_queueName">[Config("OrchestratorQueueName").ToString]</InArgument>
                                  <OutArgument x:TypeArguments="njl:JObject" x:Key="out_jsonQueueProcessingStatus">[jsonQueueProcessingStatus]</OutArgument>
                                </ui:InvokeWorkflowFile.Arguments>
                              </ui:InvokeWorkflowFile>
                              <If Condition="[string.Compare(jsonQueueProcessingStatus.Item(&quot;QueueDefinitionAcceptAutomaticallyRetry&quot;).ToString, &quot;true&quot;, true) = 0]" DisplayName="If Queue AutoRetry is enabled, MaxRetryNumber becomes the Queue Retry number" sap2010:WorkflowViewState.IdRef="If_41">
                                <If.Then>
                                  <Assign DisplayName="Assign MaxRetryNumber" sap2010:WorkflowViewState.IdRef="Assign_106">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:Object">[Config("MaxRetryNumber")]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="njl:JToken">[jsonQueueProcessingStatus.Item("QueueDefinitionMaxNumberOfRetries")]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                </If.Then>
                                <If.Else>
                                  <Assign DisplayName="Assign MaxRetryNumber" sap2010:WorkflowViewState.IdRef="Assign_107">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:Object">[Config("MaxRetryNumber")]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:Object">[0]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                </If.Else>
                              </If>
                            </Sequence>
                          </If.Then>
                        </If>
                      </Sequence>
                    </If.Then>
                  </If>
                </Sequence>
                <Sequence sap2010:Annotation.AnnotationText="Call Process Layer" DisplayName="Process" sap2010:WorkflowViewState.IdRef="Sequence_270">
                  <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke InitiAllApplications workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_90" UnSafe="False" WorkflowFileName="ProcessLayer\InitAllApplications.xaml">
                    <ui:InvokeWorkflowFile.Arguments>
                      <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[Config]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_wbType">[in_wbType+", "+"InitAllApplications"]</InArgument>
                      <InArgument x:TypeArguments="x:Int32" x:Key="in_wbLevel">[wbInit_Level+1]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_wbParent">[wbInit_Type]</InArgument>
                      <InOutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="io_Audit">[wbInit_Audit]</InOutArgument>
                    </ui:InvokeWorkflowFile.Arguments>
                  </ui:InvokeWorkflowFile>
                </Sequence>
                <Sequence sap2010:Annotation.AnnotationText="Logging for work block. The sequence adds logging fields and counts the number of successful and failed child processes by adding wbName_Audit of the child processes to the dictionary named wbName_Audit &lt;string, object&gt; of the parent process" DisplayName="wb Logging Successful" sap2010:WorkflowViewState.IdRef="Sequence_271">
                  <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke wbLogging workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_91" UnSafe="False" WorkflowFileName="Framework\wbLogging.xaml">
                    <ui:InvokeWorkflowFile.Arguments>
                      <InArgument x:TypeArguments="x:String" x:Key="in_wbType">[wbInit_Type]</InArgument>
                      <InArgument x:TypeArguments="x:Int32" x:Key="in_wbLevel">[wbInit_Level]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_wbParent">[wbInit_Parent]</InArgument>
                      <InArgument x:TypeArguments="x:Int32" x:Key="in_LogLevel">1</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_LogMessage">["Work Block "+ wbInit_Type.toString + " successful"]</InArgument>
                      <InArgument x:TypeArguments="s:DateTime" x:Key="in_wbStart">[wbInit_StartTime]</InArgument>
                      <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_ChildAudit">[wbInit_Audit]</InArgument>
                      <InOutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="io_ParentAudit">[wbMain_Audit]</InOutArgument>
                      <InArgument x:TypeArguments="x:Boolean" x:Key="in_SuppressLogging">True</InArgument>
                      <InArgument x:TypeArguments="x:Boolean" x:Key="in_wbStatusSuccessful">[if(SystemError is Nothing AND BusinessRuleException is Nothing, true, false)]</InArgument>
                    </ui:InvokeWorkflowFile.Arguments>
                  </ui:InvokeWorkflowFile>
                </Sequence>
              </Sequence>
            </TryCatch.Try>
            <TryCatch.Catches>
              <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_23">
                <ActivityAction x:TypeArguments="s:Exception">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Exception Handling" sap2010:WorkflowViewState.IdRef="Sequence_274">
                    <Assign DisplayName="Assign exception to SystemError" sap2010:WorkflowViewState.IdRef="Assign_108">
                      <Assign.To>
                        <OutArgument x:TypeArguments="s:Exception">[SystemError]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="s:Exception">[exception]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Sequence sap2010:Annotation.AnnotationText="Logging for work block. The sequence adds logging fields and counts the number of successful and failed child processes by adding wbName_Audit of the child processes to the dictionary named wbName_Audit &lt;string, object&gt; of the parent process" DisplayName="wb Logging Failed" sap2010:WorkflowViewState.IdRef="Sequence_273">
                      <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke wbLogging workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_92" UnSafe="False" WorkflowFileName="Framework\wbLogging.xaml">
                        <ui:InvokeWorkflowFile.Arguments>
                          <InArgument x:TypeArguments="x:String" x:Key="in_wbType">[wbInit_Type]</InArgument>
                          <InArgument x:TypeArguments="x:Int32" x:Key="in_wbLevel">[wbInit_Level]</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="in_wbParent">[wbInit_Parent]</InArgument>
                          <InArgument x:TypeArguments="x:Int32" x:Key="in_LogLevel">4</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="in_LogMessage">["Work Block "+ wbInit_Type.toString + " failed with exception "+exception.Message+" at Source "+exception.Source]</InArgument>
                          <InArgument x:TypeArguments="s:DateTime" x:Key="in_wbStart">[wbInit_StartTime]</InArgument>
                          <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_ChildAudit">[wbInit_Audit]</InArgument>
                          <InOutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="io_ParentAudit">[wbMain_Audit]</InOutArgument>
                          <InArgument x:TypeArguments="x:Boolean" x:Key="in_SuppressLogging">False</InArgument>
                          <InArgument x:TypeArguments="x:Boolean" x:Key="in_wbStatusSuccessful">[if(SystemError is Nothing AND BusinessRuleException is Nothing, true, false)]</InArgument>
                        </ui:InvokeWorkflowFile.Arguments>
                      </ui:InvokeWorkflowFile>
                    </Sequence>
                  </Sequence>
                </ActivityAction>
              </Catch>
            </TryCatch.Catches>
          </TryCatch>
        </State.Entry>
        <State.Transitions>
          <Transition DisplayName="Success" sap2010:WorkflowViewState.IdRef="Transition_2" Condition="[SystemError is Nothing]">
            <Transition.To>
              <State x:Name="__ReferenceID1" sap2010:Annotation.AnnotationText="Get next transaction input data" DisplayName="Get Transaction Data State" sap2010:WorkflowViewState.IdRef="State_4">
                <State.Entry>
                  <TryCatch sap2010:Annotation.AnnotationText="Get Transaction Data work block." DisplayName="wbGetTransactionData" sap2010:WorkflowViewState.IdRef="TryCatch_18">
                    <TryCatch.Variables>
                      <Variable x:TypeArguments="x:Int32" Default="[wbMain_Level+1]" Name="wbGetTransactionData_Level" />
                      <Variable x:TypeArguments="x:String" Default="[wbMain_Type]" Name="wbGetTransactionData_Parent" />
                      <Variable x:TypeArguments="x:String" Default="[in_wbType+&quot;, &quot;+&quot;Get Transaction Data State&quot;]" Name="wbGetTransactionData_Type" />
                      <Variable x:TypeArguments="scg:Dictionary(x:String, x:Object)" Default="[New system.Collections.Generic.Dictionary(Of String, Object) from { {&quot;Successful&quot;, 0}, {&quot;Failed&quot;, 0} }]" Name="wbGetTransactionData_Audit" />
                      <Variable x:TypeArguments="s:DateTime" Default="[datetime.Now]" Name="wbGetTransactionData_StartTime" />
                    </TryCatch.Variables>
                    <TryCatch.Try>
                      <Sequence sap2010:Annotation.AnnotationText="The TransactionNumber variable holds the current transaction number. Incrementing this number means getting the next transaction. For a robot retry, the number is not increased, in case of application exception, until the max retry number.&#xA;TransactionItem type needs to be changed accordingly." DisplayName="Try processing wbGetTransactionData" sap2010:WorkflowViewState.IdRef="Sequence_281">
                        <Sequence.Variables>
                          <Variable x:TypeArguments="x:Boolean" Name="ShouldStop" />
                        </Sequence.Variables>
                        <Sequence sap2010:Annotation.AnnotationText="This section is needed for the correct operation of the framework. Edits here break things." DisplayName="System - Reserved" sap2010:WorkflowViewState.IdRef="Sequence_278">
                          <Assign DisplayName="Delete BusinessRuleException" sap2010:WorkflowViewState.IdRef="Assign_109">
                            <Assign.To>
                              <OutArgument x:TypeArguments="ui:BusinessRuleException">[BusinessRuleException]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="ui:BusinessRuleException">[Nothing]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <ui:ShouldStop DisplayName="Check Stop Signal" sap2010:WorkflowViewState.IdRef="ShouldStop_6" Result="[ShouldStop]" />
                          <If Condition="[ShouldStop]" DisplayName="If stop requested" sap2010:WorkflowViewState.IdRef="If_44">
                            <If.Then>
                              <Sequence DisplayName="Orchestrator stop" sap2010:WorkflowViewState.IdRef="Sequence_277">
                                <Sequence DisplayName="Logging and cleanup" sap2010:WorkflowViewState.IdRef="Sequence_276">
                                  <Assign DisplayName="End Process" sap2010:WorkflowViewState.IdRef="Assign_110">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="ui:QueueItem">[TransactionItem]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="ui:QueueItem">[Nothing]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                </Sequence>
                              </Sequence>
                            </If.Then>
                          </If>
                        </Sequence>
                        <Sequence sap2010:Annotation.AnnotationText="Process layer." DisplayName="Process" sap2010:WorkflowViewState.IdRef="Sequence_279">
                          <If Condition="[not(ShouldStop)]" DisplayName="If we should not stop, get next transaction Data" sap2010:WorkflowViewState.IdRef="If_45">
                            <If.Then>
                              <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke GetTransactionData workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_93" UnSafe="False" WorkflowFileName="ProcessLayer\GetTransactionData.xaml">
                                <ui:InvokeWorkflowFile.Arguments>
                                  <InArgument x:TypeArguments="x:Int32" x:Key="in_TransactionNumber">[TransactionNumber]</InArgument>
                                  <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[Config]</InArgument>
                                  <OutArgument x:TypeArguments="ui:QueueItem" x:Key="out_TransactionItem">[TransactionItem]</OutArgument>
                                  <InOutArgument x:TypeArguments="sd:DataTable" x:Key="io_TransactionData">[TransactionData]</InOutArgument>
                                </ui:InvokeWorkflowFile.Arguments>
                              </ui:InvokeWorkflowFile>
                            </If.Then>
                          </If>
                        </Sequence>
                        <Sequence sap2010:Annotation.AnnotationText="Logging for work block. The sequence adds logging fields and counts the number of successful and failed child processes by adding wbName_Audit of the child processes to the dictionary named wbName_Audit &lt;string, object&gt; of the parent process" DisplayName="wb Logging Successful" sap2010:WorkflowViewState.IdRef="Sequence_280">
                          <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke wbLogging workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_94" UnSafe="False" WorkflowFileName="Framework\wbLogging.xaml">
                            <ui:InvokeWorkflowFile.Arguments>
                              <InArgument x:TypeArguments="x:String" x:Key="in_wbType">[wbGetTransactionData_Type]</InArgument>
                              <InArgument x:TypeArguments="x:Int32" x:Key="in_wbLevel">[wbGetTransactionData_Level]</InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="in_wbParent">[wbGetTransactionData_Parent]</InArgument>
                              <InArgument x:TypeArguments="x:Int32" x:Key="in_LogLevel">1</InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="in_LogMessage">["Transaction Number " + TransactionNumber.ToString + ". " + "Work Block "+ wbGetTransactionData_Type.toString + " successful for Transaction Number " + TransactionNumber.ToString]</InArgument>
                              <InArgument x:TypeArguments="s:DateTime" x:Key="in_wbStart">[wbGetTransactionData_StartTime]</InArgument>
                              <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_ChildAudit">[wbGetTransactionData_Audit]</InArgument>
                              <InOutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="io_ParentAudit">[wbMain_Audit]</InOutArgument>
                              <InArgument x:TypeArguments="x:Boolean" x:Key="in_SuppressLogging">True</InArgument>
                              <InArgument x:TypeArguments="x:Boolean" x:Key="in_wbStatusSuccessful">[if(SystemError is Nothing AND BusinessRuleException is Nothing, true, false)]</InArgument>
                            </ui:InvokeWorkflowFile.Arguments>
                          </ui:InvokeWorkflowFile>
                        </Sequence>
                      </Sequence>
                    </TryCatch.Try>
                    <TryCatch.Catches>
                      <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_24">
                        <ActivityAction x:TypeArguments="s:Exception">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                          </ActivityAction.Argument>
                          <Sequence DisplayName="Exception Handling" sap2010:WorkflowViewState.IdRef="Sequence_283">
                            <Assign DisplayName="Assign exception to SystemError" sap2010:WorkflowViewState.IdRef="Assign_111">
                              <Assign.To>
                                <OutArgument x:TypeArguments="s:Exception">[SystemError]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="s:Exception">[exception]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <Assign DisplayName="End Process " sap2010:WorkflowViewState.IdRef="Assign_112">
                              <Assign.To>
                                <OutArgument x:TypeArguments="ui:QueueItem">[TransactionItem]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="ui:QueueItem">[Nothing]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <Sequence sap2010:Annotation.AnnotationText="Logging for work block. The sequence adds logging fields and counts the number of successful and failed child processes by adding wbName_Audit of the child processes to the dictionary named wbName_Audit &lt;string, object&gt; of the parent process" DisplayName="wb Logging Failed" sap2010:WorkflowViewState.IdRef="Sequence_282">
                              <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke wbLogging workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_95" UnSafe="False" WorkflowFileName="Framework\wbLogging.xaml">
                                <ui:InvokeWorkflowFile.Arguments>
                                  <InArgument x:TypeArguments="x:String" x:Key="in_wbType">[wbGetTransactionData_Type]</InArgument>
                                  <InArgument x:TypeArguments="x:Int32" x:Key="in_wbLevel">[wbGetTransactionData_Level]</InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="in_wbParent">[wbGetTransactionData_Parent]</InArgument>
                                  <InArgument x:TypeArguments="x:Int32" x:Key="in_LogLevel">4</InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="in_LogMessage">["Transaction Number " + TransactionNumber.ToString + ". " + "Work Block "+ wbGetTransactionData_Type.toString + " failed with exception "+exception.Message+" at Source "+exception.Source]</InArgument>
                                  <InArgument x:TypeArguments="s:DateTime" x:Key="in_wbStart">[wbGetTransactionData_StartTime]</InArgument>
                                  <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_ChildAudit">[wbGetTransactionData_Audit]</InArgument>
                                  <InOutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="io_ParentAudit">[wbMain_Audit]</InOutArgument>
                                  <InArgument x:TypeArguments="x:Boolean" x:Key="in_SuppressLogging">False</InArgument>
                                  <InArgument x:TypeArguments="x:Boolean" x:Key="in_wbStatusSuccessful">[if(SystemError is Nothing AND BusinessRuleException is Nothing, true, false)]</InArgument>
                                </ui:InvokeWorkflowFile.Arguments>
                              </ui:InvokeWorkflowFile>
                            </Sequence>
                          </Sequence>
                        </ActivityAction>
                      </Catch>
                    </TryCatch.Catches>
                  </TryCatch>
                </State.Entry>
                <State.Transitions>
                  <Transition DisplayName="New Transaction" sap2010:WorkflowViewState.IdRef="Transition_6" Condition="[TransactionItem IsNot Nothing]">
                    <Transition.To>
                      <State x:Name="__ReferenceID3" sap2010:Annotation.AnnotationText="A transaction either succeeds or fails with a Business Rule Exception or a System Error. For System Error, it can be retried." DisplayName="Process Transaction State" sap2010:WorkflowViewState.IdRef="State_3">
                        <State.Entry>
                          <TryCatch sap2010:Annotation.AnnotationText="Process Transaction State work block." DisplayName="wbProcessTransaction" sap2010:WorkflowViewState.IdRef="TryCatch_19">
                            <TryCatch.Variables>
                              <Variable x:TypeArguments="s:DateTime" Default="[datetime.Now]" Name="wbProcessTransaction_StartTime" />
                              <Variable x:TypeArguments="scg:Dictionary(x:String, x:Object)" Default="[New system.Collections.Generic.Dictionary(Of String, Object) from { {&quot;Successful&quot;, 0}, {&quot;Failed&quot;, 0} }]" Name="wbProcessTransaction_Audit" />
                              <Variable x:TypeArguments="x:String" Default="[in_wbType+&quot;, &quot;+&quot;Process Transaction State&quot;]" Name="wbProcessTransaction_Type" />
                              <Variable x:TypeArguments="x:String" Default="[wbMain_Type]" Name="wbProcessTransaction_Parent" />
                              <Variable x:TypeArguments="x:Int32" Default="[wbMain_Level+1]" Name="wbProcessTransaction_Level" />
                            </TryCatch.Variables>
                            <TryCatch.Try>
                              <Sequence DisplayName="Try processing wbProcessTransaction" sap2010:WorkflowViewState.IdRef="Sequence_286">
                                <Sequence sap2010:Annotation.AnnotationText="This section is needed for the correct operation of the framework. Edits here break things." DisplayName="System - reserved" sap2010:WorkflowViewState.IdRef="Sequence_296" />
                                <Sequence sap2010:Annotation.AnnotationText="Process layer." DisplayName="Process" sap2010:WorkflowViewState.IdRef="Sequence_284">
                                  <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke ProcessTransaction workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_96" UnSafe="False" WorkflowFileName="ProcessLayer\Process.xaml">
                                    <ui:InvokeWorkflowFile.Arguments>
                                      <InArgument x:TypeArguments="ui:QueueItem" x:Key="in_TransactionItem">[TransactionItem]</InArgument>
                                      <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[Config]</InArgument>
                                      <InOutArgument x:TypeArguments="x:Int32" x:Key="io_TransactionNumber">[TransactionNumber]</InOutArgument>
                                      <InOutArgument x:TypeArguments="x:Int32" x:Key="io_RetryNumber">[RetryNumber]</InOutArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="in_wbParent">[wbProcessTransaction_Type]</InArgument>
                                      <InArgument x:TypeArguments="x:Int32" x:Key="in_wbLevel">[wbProcessTransaction_Level+1]</InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="in_wbType">[in_wbType+", "+"Process Transaction"]</InArgument>
                                      <InOutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="io_Audit">[wbProcessTransaction_Audit]</InOutArgument>
                                    </ui:InvokeWorkflowFile.Arguments>
                                  </ui:InvokeWorkflowFile>
                                </Sequence>
                                <Sequence sap2010:Annotation.AnnotationText="Logging for work block. The sequence adds logging fields and counts the number of successful and failed child processes by adding wbName_Audit of the child processes to the dictionary named wbName_Audit &lt;string, object&gt; of the parent process" DisplayName="wb Logging Successful" sap2010:WorkflowViewState.IdRef="Sequence_285">
                                  <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke wbLogging workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_97" UnSafe="False" WorkflowFileName="Framework\wbLogging.xaml">
                                    <ui:InvokeWorkflowFile.Arguments>
                                      <InArgument x:TypeArguments="x:String" x:Key="in_wbType">[wbProcessTransaction_Type]</InArgument>
                                      <InArgument x:TypeArguments="x:Int32" x:Key="in_wbLevel">[wbProcessTransaction_Level]</InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="in_wbParent">[wbProcessTransaction_Parent]</InArgument>
                                      <InArgument x:TypeArguments="x:Int32" x:Key="in_LogLevel">1</InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="in_LogMessage">["Transaction Number " + TransactionNumber.ToString + ". " + "Work Block "+ wbProcessTransaction_Type.toString + " successful for Transaction Number " + TransactionNumber.ToString]</InArgument>
                                      <InArgument x:TypeArguments="s:DateTime" x:Key="in_wbStart">[wbProcessTransaction_StartTime]</InArgument>
                                      <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_ChildAudit">[wbProcessTransaction_Audit]</InArgument>
                                      <InOutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="io_ParentAudit">[wbMain_Audit]</InOutArgument>
                                      <InArgument x:TypeArguments="x:Boolean" x:Key="in_SuppressLogging">True</InArgument>
                                      <InArgument x:TypeArguments="x:Boolean" x:Key="in_wbStatusSuccessful">[if(SystemError is Nothing AND BusinessRuleException is Nothing, true, false)]</InArgument>
                                    </ui:InvokeWorkflowFile.Arguments>
                                  </ui:InvokeWorkflowFile>
                                </Sequence>
                              </Sequence>
                            </TryCatch.Try>
                            <TryCatch.Catches>
                              <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_25">
                                <ActivityAction x:TypeArguments="s:Exception">
                                  <ActivityAction.Argument>
                                    <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                  </ActivityAction.Argument>
                                  <Sequence DisplayName="Exception Handling" sap2010:WorkflowViewState.IdRef="Sequence_288">
                                    <Assign DisplayName="Set SystemError" sap2010:WorkflowViewState.IdRef="Assign_113">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="s:Exception">[SystemError]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="s:Exception">[exception]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <Sequence sap2010:Annotation.AnnotationText="Logging for work block. The sequence adds logging fields and counts the number of successful and failed child processes by adding wbName_Audit of the child processes to the dictionary named wbName_Audit &lt;string, object&gt; of the parent process" DisplayName="wb Logging Failed" sap2010:WorkflowViewState.IdRef="Sequence_287">
                                      <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke wbLogging workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_98" UnSafe="False" WorkflowFileName="Framework\wbLogging.xaml">
                                        <ui:InvokeWorkflowFile.Arguments>
                                          <InArgument x:TypeArguments="x:String" x:Key="in_wbType">[wbProcessTransaction_Type]</InArgument>
                                          <InArgument x:TypeArguments="x:Int32" x:Key="in_wbLevel">[wbProcessTransaction_Level]</InArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="in_wbParent">[wbProcessTransaction_Parent]</InArgument>
                                          <InArgument x:TypeArguments="x:Int32" x:Key="in_LogLevel">3</InArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="in_LogMessage">["Transaction Number " + TransactionNumber.ToString + ". " + "Work Block "+ wbProcessTransaction_Type.toString + " failed with exception "+exception.Message+" at Source "+exception.Source]</InArgument>
                                          <InArgument x:TypeArguments="s:DateTime" x:Key="in_wbStart">[wbProcessTransaction_StartTime]</InArgument>
                                          <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_ChildAudit">[wbProcessTransaction_Audit]</InArgument>
                                          <InOutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="io_ParentAudit">[wbMain_Audit]</InOutArgument>
                                          <InArgument x:TypeArguments="x:Boolean" x:Key="in_SuppressLogging">True</InArgument>
                                          <InArgument x:TypeArguments="x:Boolean" x:Key="in_wbStatusSuccessful">[if(SystemError is Nothing AND BusinessRuleException is Nothing, true, false)]</InArgument>
                                        </ui:InvokeWorkflowFile.Arguments>
                                      </ui:InvokeWorkflowFile>
                                    </Sequence>
                                  </Sequence>
                                </ActivityAction>
                              </Catch>
                              <Catch x:TypeArguments="ui:BusinessRuleException" sap2010:WorkflowViewState.IdRef="Catch`1_26">
                                <ActivityAction x:TypeArguments="ui:BusinessRuleException">
                                  <ActivityAction.Argument>
                                    <DelegateInArgument x:TypeArguments="ui:BusinessRuleException" Name="exception" />
                                  </ActivityAction.Argument>
                                  <Sequence DisplayName="Exception Handling" sap2010:WorkflowViewState.IdRef="Sequence_290">
                                    <Assign DisplayName="Set transaction status to Rule Exception" sap2010:WorkflowViewState.IdRef="Assign_114">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="ui:BusinessRuleException">[BusinessRuleException]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="ui:BusinessRuleException">[exception]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <Sequence sap2010:Annotation.AnnotationText="Logging for work block. The sequence adds logging fields and counts the number of successful and failed child processes by adding wbName_Audit of the child processes to the dictionary named wbName_Audit &lt;string, object&gt; of the parent process" DisplayName="wb Logging Failed BRE" sap2010:WorkflowViewState.IdRef="Sequence_289">
                                      <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke wbLogging workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_99" UnSafe="False" WorkflowFileName="Framework\wbLogging.xaml">
                                        <ui:InvokeWorkflowFile.Arguments>
                                          <InArgument x:TypeArguments="x:String" x:Key="in_wbType">[wbProcessTransaction_Type]</InArgument>
                                          <InArgument x:TypeArguments="x:Int32" x:Key="in_wbLevel">[wbProcessTransaction_Level]</InArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="in_wbParent">[wbProcessTransaction_Parent]</InArgument>
                                          <InArgument x:TypeArguments="x:Int32" x:Key="in_LogLevel">3</InArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="in_LogMessage">["Transaction Number " + TransactionNumber.ToString + ". " + "Work Block "+ wbProcessTransaction_Type.toString + " failed with exception "+exception.Message+" at Source "+exception.Source + ". BRE"]</InArgument>
                                          <InArgument x:TypeArguments="s:DateTime" x:Key="in_wbStart">[wbProcessTransaction_StartTime]</InArgument>
                                          <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_ChildAudit">[wbProcessTransaction_Audit]</InArgument>
                                          <InOutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="io_ParentAudit">[wbMain_Audit]</InOutArgument>
                                          <InArgument x:TypeArguments="x:Boolean" x:Key="in_SuppressLogging">True</InArgument>
                                          <InArgument x:TypeArguments="x:Boolean" x:Key="in_wbStatusSuccessful">[if(SystemError is Nothing AND BusinessRuleException is Nothing, true, false)]</InArgument>
                                        </ui:InvokeWorkflowFile.Arguments>
                                      </ui:InvokeWorkflowFile>
                                    </Sequence>
                                  </Sequence>
                                </ActivityAction>
                              </Catch>
                            </TryCatch.Catches>
                            <TryCatch.Finally>
                              <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="This workflow takes the process to the next transaction. It uses information regarding the data type of TransactionItem (either a QueueItem or something else) to know the RetryCount of the object. If your TransactionItem is not a QueueItem, simply pass Nothing to in_TransactionItem. There is no need to edit this workflow." DisplayName="Invoke NextTransaction workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_100" UnSafe="False" WorkflowFileName="Framework\NextTransaction.xaml">
                                <ui:InvokeWorkflowFile.Arguments>
                                  <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[Config]</InArgument>
                                  <InArgument x:TypeArguments="s:Exception" x:Key="in_SystemError">[SystemError]</InArgument>
                                  <InArgument x:TypeArguments="ui:BusinessRuleException" x:Key="in_BusinessRuleException">[BusinessRuleException]</InArgument>
                                  <InOutArgument x:TypeArguments="x:Int32" x:Key="io_RetryNumber">[RetryNumber]</InOutArgument>
                                  <InOutArgument x:TypeArguments="x:Int32" x:Key="io_TransactionNumber">[TransactionNumber]</InOutArgument>
                                  <InArgument x:TypeArguments="ui:QueueItem" x:Key="in_TransactionItem">[TransactionItem]</InArgument>
                                  <InArgument x:TypeArguments="x:Int32" x:Key="in_wbLevel">[wbMain_Level+1]</InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="in_wbParent">[wbMain_Type]</InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="in_wbType">[in_wbType+", "+"Next Transaction"]</InArgument>
                                  <InOutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="io_Audit">[wbMain_Audit]</InOutArgument>
                                </ui:InvokeWorkflowFile.Arguments>
                              </ui:InvokeWorkflowFile>
                            </TryCatch.Finally>
                          </TryCatch>
                        </State.Entry>
                        <State.Transitions>
                          <Transition DisplayName="Error" sap2010:WorkflowViewState.IdRef="Transition_4" To="{x:Reference __ReferenceID0}" Condition="[SystemError IsNot Nothing]" />
                          <Transition DisplayName="Rule Exception" sap2010:WorkflowViewState.IdRef="Transition_1" To="{x:Reference __ReferenceID1}" Condition="[BusinessRuleException IsNot Nothing]" />
                          <Transition sap2010:Annotation.AnnotationText="No need for any action here, in case of success simply go to next transaction" DisplayName="Success" sap2010:WorkflowViewState.IdRef="Transition_5" To="{x:Reference __ReferenceID1}" Condition="[SystemError Is Nothing And BusinessRuleException is Nothing]" />
                        </State.Transitions>
                      </State>
                    </Transition.To>
                  </Transition>
                  <Transition sap2010:Annotation.AnnotationText="This is a simple mecanism to stop the process.&#xA;In reallife scenario you can stop the process when there is no more data to process or on a schedule." DisplayName="No Data" sap2010:WorkflowViewState.IdRef="Transition_7" Condition="[TransactionItem Is Nothing]">
                    <Transition.To>
                      <State x:Name="__ReferenceID2" sap2010:Annotation.AnnotationText="Process stops here" DisplayName="End Process State" sap2010:WorkflowViewState.IdRef="State_1" IsFinal="True">
                        <State.Entry>
                          <TryCatch sap2010:Annotation.AnnotationText="Main work block." DisplayName="wbMain" sap2010:WorkflowViewState.IdRef="TryCatch_20">
                            <TryCatch.Try>
                              <Sequence DisplayName="Try processing wbMain" sap2010:WorkflowViewState.IdRef="Sequence_293">
                                <Sequence sap2010:Annotation.AnnotationText="This section is needed for the correct operation of the framework. Edits here break things." DisplayName="System - reserved" sap2010:WorkflowViewState.IdRef="Sequence_297">
                                  <If Condition="[SystemError isNot Nothing]" DisplayName="If we are here due to an SystemError in Init State" sap2010:WorkflowViewState.IdRef="If_46">
                                    <If.Then>
                                      <Throw sap2010:Annotation.AnnotationText="Throw System Exception.&#xA;The Process has Failed to Initialize" DisplayName="Throw SYS Exception" Exception="[new system.exception(&quot;The Process has Failed to Initialize.&quot;)]" sap2010:WorkflowViewState.IdRef="Throw_1" />
                                    </If.Then>
                                  </If>
                                </Sequence>
                                <Sequence sap2010:Annotation.AnnotationText="Process layer." DisplayName="Process" sap2010:WorkflowViewState.IdRef="Sequence_291">
                                  <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke CloseAllApplications workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_101" UnSafe="False" WorkflowFileName="ProcessLayer\CloseAllApplications.xaml">
                                    <ui:InvokeWorkflowFile.Arguments>
                                      <InArgument x:TypeArguments="x:String" x:Key="in_wbType">[in_wbType+", "+"Close All Applications"]</InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="in_wbParent">[wbMain_Type]</InArgument>
                                      <InArgument x:TypeArguments="x:Int32" x:Key="in_wbLevel">[wbMain_Level+1]</InArgument>
                                      <InOutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="io_Audit">[wbMain_Audit]</InOutArgument>
                                    </ui:InvokeWorkflowFile.Arguments>
                                  </ui:InvokeWorkflowFile>
                                </Sequence>
                                <Sequence sap2010:Annotation.AnnotationText="Logging for work block. The sequence adds logging fields and counts the number of successful and failed child processes by adding wbName_Audit of the child processes to the dictionary named wbName_Audit &lt;string, object&gt; of the parent process" DisplayName="wbLogging Success" sap2010:WorkflowViewState.IdRef="Sequence_292">
                                  <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke wbLogging workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_102" UnSafe="False" WorkflowFileName="Framework\wbLogging.xaml">
                                    <ui:InvokeWorkflowFile.Arguments>
                                      <InArgument x:TypeArguments="x:String" x:Key="in_wbType">[wbMain_Type]</InArgument>
                                      <InArgument x:TypeArguments="x:Int32" x:Key="in_wbLevel">[wbMain_Level]</InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="in_wbParent">[wbMain_Parent]</InArgument>
                                      <InArgument x:TypeArguments="x:Int32" x:Key="in_LogLevel">1</InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="in_LogMessage">["Work Block "+ wbMain_Type.toString + " successful"]</InArgument>
                                      <InArgument x:TypeArguments="s:DateTime" x:Key="in_wbStart">[wbMain_StartTime]</InArgument>
                                      <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_ChildAudit">[wbMain_Audit]</InArgument>
                                      <InOutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="io_ParentAudit" />
                                      <InArgument x:TypeArguments="x:Boolean" x:Key="in_SuppressLogging">False</InArgument>
                                      <InArgument x:TypeArguments="x:Boolean" x:Key="in_wbStatusSuccessful">[if(SystemError is Nothing AND BusinessRuleException is Nothing, true, false)]</InArgument>
                                    </ui:InvokeWorkflowFile.Arguments>
                                  </ui:InvokeWorkflowFile>
                                </Sequence>
                              </Sequence>
                            </TryCatch.Try>
                            <TryCatch.Catches>
                              <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_27">
                                <ActivityAction x:TypeArguments="s:Exception">
                                  <ActivityAction.Argument>
                                    <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                  </ActivityAction.Argument>
                                  <Sequence DisplayName="Exception Handling" sap2010:WorkflowViewState.IdRef="Sequence_295">
                                    <Sequence sap2010:Annotation.AnnotationText="Logging for work block. The sequence adds logging fields and counts the number of successful and failed child processes by adding wbName_Audit of the child processes to the dictionary named wbName_Audit &lt;string, object&gt; of the parent process" DisplayName="wb Logging Failed" sap2010:WorkflowViewState.IdRef="Sequence_294">
                                      <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke wbLogging workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_103" UnSafe="False" WorkflowFileName="Framework\wbLogging.xaml">
                                        <ui:InvokeWorkflowFile.Arguments>
                                          <InArgument x:TypeArguments="x:String" x:Key="in_wbType">[wbMain_Type]</InArgument>
                                          <InArgument x:TypeArguments="x:Int32" x:Key="in_wbLevel">[wbMain_Level]</InArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="in_wbParent">[wbMain_Parent]</InArgument>
                                          <InArgument x:TypeArguments="x:Int32" x:Key="in_LogLevel">3</InArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="in_LogMessage">["Work Block "+ wbMain_Type.toString + " failed with exception "+exception.Message+" at Source "+exception.Source]</InArgument>
                                          <InArgument x:TypeArguments="s:DateTime" x:Key="in_wbStart">[wbMain_StartTime]</InArgument>
                                          <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_ChildAudit">[wbMain_Audit]</InArgument>
                                          <InOutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="io_ParentAudit" />
                                          <InArgument x:TypeArguments="x:Boolean" x:Key="in_SuppressLogging">False</InArgument>
                                          <InArgument x:TypeArguments="x:Boolean" x:Key="in_wbStatusSuccessful">[if(SystemError is Nothing AND BusinessRuleException is Nothing, true, false)]</InArgument>
                                        </ui:InvokeWorkflowFile.Arguments>
                                      </ui:InvokeWorkflowFile>
                                    </Sequence>
                                    <Rethrow sap2010:WorkflowViewState.IdRef="Rethrow_1" />
                                  </Sequence>
                                </ActivityAction>
                              </Catch>
                            </TryCatch.Catches>
                          </TryCatch>
                        </State.Entry>
                      </State>
                    </Transition.To>
                  </Transition>
                </State.Transitions>
              </State>
            </Transition.To>
          </Transition>
          <Transition DisplayName="System Error" sap2010:WorkflowViewState.IdRef="Transition_3" To="{x:Reference __ReferenceID2}" Condition="[SystemError isNot Nothing]" />
        </State.Transitions>
      </State>
    </StateMachine.InitialState>
    <x:Reference>__ReferenceID1</x:Reference>
    <x:Reference>__ReferenceID3</x:Reference>
    <x:Reference>__ReferenceID2</x:Reference>
    <x:Reference>__ReferenceID0</x:Reference>
    <StateMachine.Variables>
      <Variable x:TypeArguments="ui:QueueItem" Name="TransactionItem" />
      <Variable x:TypeArguments="s:Exception" Name="SystemError" />
      <Variable x:TypeArguments="ui:BusinessRuleException" Name="BusinessRuleException" />
      <Variable x:TypeArguments="x:Int32" Default="1" Name="TransactionNumber" />
      <Variable x:TypeArguments="scg:Dictionary(x:String, x:Object)" Name="Config" />
      <Variable x:TypeArguments="x:Int32" Default="0" Name="RetryNumber" />
      <Variable x:TypeArguments="sd:DataTable" Name="TransactionData" />
      <Variable x:TypeArguments="s:DateTime" Default="[datetime.now()]" Name="wbMain_StartTime" />
      <Variable x:TypeArguments="x:String" Default="[in_wbType]" Name="wbMain_Type" />
      <Variable x:TypeArguments="x:Int32" Default="[in_wbLevel]" Name="wbMain_Level" />
      <Variable x:TypeArguments="scg:Dictionary(x:String, x:Object)" Default="[New system.Collections.Generic.Dictionary(Of String, Object) from { {&quot;Successful&quot;, 0}, {&quot;Failed&quot;, 0} }]" Name="wbMain_Audit" />
      <Variable x:TypeArguments="x:String" Default="[in_wbParent]" Name="wbMain_Parent" />
    </StateMachine.Variables>
    <sads:DebugSymbol.Symbol>d11DOlxVc2Vyc1xtaWhhaS5kdW5hcmVhbnVcR29vZ2xlIERyaXZlXFdvcmtzcGFjZVxVaVBhdGhcVGVtcGxhdGVzXFVpUGF0aF9SRUZyYW1ld29ya1xNYWluLnhhbWyyAgGIAQGXAQEEAU4BVwEDAW4BcAECUgOFBRICAQH6BDP6BDYDAdYD/AQz/AQ2AwHVA/4ENv4ESAMB1AP/BDT/BEEDAdIDgAUzgAVBAwHQA4EFToEFzAEDAc8DggU0ggVDAwHNA5oCD+sEFwMB6AKUAxecBB8DAeEBoQQX5wQfAwGkAVQH8AQPAgECnAITjwMeAwHtApIDdpIDlwEDAesCnwSrAp8EyQIDAeoClgMblQQmAwHoAZgElgGYBLMBAwHlAZkEnwGZBMYBAwHkAZoEigKaBMkCAwHjAaMEG+UEJgMBpgFWC5UCFgIBCZgCZpgCgAECAQbuBI0B7gSqAQIBBJ4CQ54CVQMBlQOfAkSfAlMDAZMDoAJEoAKHAQMBkQOhAl6hAtwBAwGQA6ICRqICVgMBjwOlAhfiAiIDAZcD6gIbiwMmAwHuApgDTpgDXgMBpgKZA2aZA+QBAwGlApoDTJoDjgEDAaMCmwNMmwNbAwGhApwDS5wDXQMBnwKfAx+/AyoDAb0ChgQfkwQ3AwGnAscDI+ADLgMBggLoAyOBBC4DAekBpQQfxwQqAwG9Ac8EI+EELgMBpwFYPlhOAgEtWVZZ1AECASxaPFp5AgEqWzxbSwIBKFw7XE0CASZfD/ABGgIBLvgBE5ECHgIBCqkCGcMCJAMBvAPEAhnRAiQDAa4D0gIZ4QIkAwGYA+sCHfICJgMBigPzAh36AiYDAYYD+wIdigMoAwHvAqADIaAD/AEDAecCoQMhrgMsAwHUAq8DIb4DLAMBvgKPBF6PBGsDAbsCkARckAR/AwG5AokEZIkEcQMBtwKKBHuKBJIBAwG1ApEEeJEEhgEDAbMCiwRjiwRwAwGxAogEdogEfgMBrwKNBGmNBHoDAa0CjARpjAR8AwGrAoYEwASGBOAEAwGqAo4EXI4EbAMBqALIAyXPAy4DAZoC0AMl3wMwAwGDAukDJfADLgMB/QHxAyWABDADAeoBpgQhrAQsAwHbAa0EIbYELAMB0AG3BCHGBCwDAb4B0AQl3wQwAwGpAeAEJeAEXAMBqAFgEWkcAwGfAWoR1AEcAgFQ1QER3wEcAgFD4AER7wEcAgEv+QEVgAIeAgEhgQIVkAIgAgELqgIbsQIkAwHJA7ICG7ICkQEDAcYDswIbwgIgAwG9A8UCG9ACIAMBrwPTAhvgAjMDAZkD8AJL8AJWAwGNA+0CTO0CWQMBiwP4Akz4AlUDAYkD9QJN9QJeAwGHA/wCH4kDNwMB8AKiAyOtAzsDAdUCsAMjvQM7AwG/As0DU80DXgMBnQLKA1TKA2EDAZsC0QMn3gM/AwGEAu4DYO4DawMBgALrA2HrA3gDAf4B8gMn/wM/AwHrAacEI6sEKAMB3AGuBCO1BDsDAdEBuAQjxQQ7AwG/AdEEJ94EPwMBqgFhE2gcAwGgAWsTeB4DAZEBeROCAR4DAYwBgwET0wEYAgFR1gET3gErAgFE4QET7gErAgEw/gFD/gFOAgEk+wFE+wFRAgEiggIXjwIvAgEMrwJWrwJfAwHMA6wCV6wCbgMBygOyAoABsgKOAQMBxwOzAimzAjcDAb4DtQIfwAIqAwHAA8UCKcUCPAMBsAPHAh/OAjcDAbID1wJa1wJ3AwGsA9UCWNUCcwMBqgPeAmXeArMBAwGpA9sCdtsCkgEDAacD3QJi3QJmAwGmA9oCW9oCewMBpAPZAlzZApACAwGgA9gCWdgCWgMBnwPTAs0B0wLnAQMBngPWAljWAnQDAZwD3AJ63AKIAQMBmgOAA16AA3sDAYQD/gJc/gJ3AwGCA4cDaYcDtwEDAYEDhAN6hAOWAQMB/wKGA2aGA2sDAf4CgwNfgwN/AwH8AoIDYIIDnAIDAfcCgQNdgQNeAwH2AvwC0QH8AusBAwH1Av8CXP8CeAMB8wKFA36FA4wBAwHxAqgDYqgDfQMB5QKqA2CqA4YBAwHjAqsDfKsDmAEDAeECpwNnpwN0AwHfAqUDeqUDggEDAd0CpANtpAN+AwHbAqYDbaYDgAEDAdkCogPeAaID+QEDAdgCqQNgqQN+AwHWArQDYrQDfwMB0gKyA2CyA3sDAdACuwNtuwO7AQMBzwK4A364A5oBAwHNAroDaroDbgMBzAK3A2O3A4MBAwHKArYDZLYDmAIDAcYCtQNhtQNiAwHFArAD1QGwA+8BAwHEArMDYLMDfAMBwgK5A4IBuQOQAQMBwALVA2bVA4MBAwGYAtMDZNMDfwMBlgLcA3HcA78BAwGVAtkDggHZA54BAwGTAtsDbtsDcgMBkgLYA2fYA4cBAwGQAtcDaNcDpAIDAYsC1gNl1gNmAwGKAtED2QHRA/MBAwGJAtQDZNQDgAEDAYcC2gOGAdoDlAEDAYUC9gNm9gODAQMB+wH0A2T0A38DAfkB/QNx/QO/AQMB+AH6A4IB+gOeAQMB9gH8A278A3IDAfUB+QNn+QOHAQMB8wH4A2j4A64CAwHyAfcDZfcDZgMB8QHyA9kB8gPzAQMB8AH1A2T1A4ABAwHuAfsDhgH7A5QBAwHsAacEMacETgMB3QGpBCepBLcCAwHfAbEEYrEEbwMB2QGwBGCwBIkBAwHXAbMEfLMEigEDAdUBrgThAa4EiQIDAdQBsgRgsgRwAwHSAbwEYrwEcQMBzgG6BGC6BG0DAcwBwwRtwwS7AQMBywHABH7ABIwBAwHJAcIEasIEbwMByAG/BGO/BHUDAcYBvgRkvgSZAQMBxAG9BGG9BGIDAcMBuATWAbgE8AEDAcIBuwRguwRuAwHAAdUEZtUEdQMBuwHTBGTTBHEDAbkB3ARx3AS/AQMBuAHZBIIB2QSQAQMBtgHbBG7bBHMDAbUB2ARn2AR5AwGzAdcEaNcE2gEDAa8B1gRl1gRmAwGuAdEE2gHRBPQBAwGtAdQEZNQEcgMBqwFmQmZdAwGjAWNDY1QDAaEBbBV3GgMBkgF6FYEBHgMBjQGDASGDATYCAVKFARfRASICAVTbAVLbAV8CAU7ZAVDZAXYCAUzcAWzcAXoCAUrYAWrYAXICAUjWAdAB1gH3AQIBR9oBUNoBYAIBReUBUuUBYQIBQeMBUOMBXQIBP+wBXewBqwECAT7pAW7pAXwCATzrAVrrAV4CATvoAVPoAWUCATnnAVTnAYkBAgE35gFR5gFSAgE24QHFAeEB3wECATXkAVDkAV4CATPqAXLqAYABAgExhgJWhgJlAgEfhAJUhAJhAgEdjQJhjQKvAQIBHIoCcooCgAECARqMAl6MAmMCARmJAleJAmkCAReIAliIAsoBAgEThwJVhwJWAgESggLJAYIC4wECARGFAlSFAmICAQ+LAnaLAoQBAgENtgIhvwIsAwHBA8sCa8sCfAMBugPJAmbJAnkDAbgDygJ2ygJ+AwG2A8wCbMwCfQMBtAPHAtoBxwKAAgMBswOpBL8BqQSKAgMB4AFsI2xAAwGTAW4ZdTEDAZUBf0N/TAMBkAF8RHxRAwGOAYYBGYwBMQMBhgGNARmRASsDAYMBkgEZlgExAwGBAZcBGdABHgIBVbcCI74CLAMBwgNxWHFlAwGdAXBWcH8DAZsBc3JzgAEDAZkBbtYBbv4BAwGYAXJWcmYDAZYBigFyigF6AwGKAYYB0QGGAfEBAwGJAYkBXokBeQMBiAGIAVqIAWoDAYcBjwFijwGRAQMBhAGSAdIBkgH2AQMBggGXASeXAYwBAgFWmQEdzgEoAgFXvAJSvAJbAwHFA7kCU7kCZAMBwwOgAR+mATcCAXmnAR+vATcCAW2wAR+3ATcCAWO4AR/NASQCAVikAWekAXcCAX+jAWCjAY8BAgF9ogFgogFqAgF7oAHZAaAB+wECAXqpAWWpAYkBAgF3rQFdrQFkAgF1qwFsqwF2AgFzrAFerAGnAQIBcaoBYaoBjQECAW+nAdwBpwGOAgIBbrIBZbIBiQECAWuzAVuzAWICAWmwAeABsAGdAgIBaLQBX7QBiQECAWa1AXS1AY8BAgFkuAEtuAG5AQIBWboBI8EBLAIBXsQBI8sBLAIBWr8BUL8BlQECAWG8AU+8AWkCAV/JAU7JAVECAV3GAU/GAWkCAVs=</sads:DebugSymbol.Symbol>
  </StateMachine>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="Assign_104" sap:VirtualizedContainerService.HintSize="243.2,60.8" />
      <sap2010:ViewStateData Id="Sequence_264" sap:VirtualizedContainerService.HintSize="508.8,80.8">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_84" sap:VirtualizedContainerService.HintSize="313.6,88" />
      <sap2010:ViewStateData Id="If_40" sap:VirtualizedContainerService.HintSize="464,238.4">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_265" sap:VirtualizedContainerService.HintSize="486.4,363.2">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_105" sap:VirtualizedContainerService.HintSize="243.2,60.8" />
      <sap2010:ViewStateData Id="Sequence_266" sap:VirtualizedContainerService.HintSize="486.4,185.6">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_85" sap:VirtualizedContainerService.HintSize="656,88" />
      <sap2010:ViewStateData Id="AddLogFields_100" sap:VirtualizedContainerService.HintSize="656,50.4">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_86" sap:VirtualizedContainerService.HintSize="656,88" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_87" sap:VirtualizedContainerService.HintSize="509,87" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_88" sap:VirtualizedContainerService.HintSize="509,87" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_89" sap:VirtualizedContainerService.HintSize="509,87" />
      <sap2010:ViewStateData Id="Assign_106" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_107" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_41" sap:VirtualizedContainerService.HintSize="509,208">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_267" sap:VirtualizedContainerService.HintSize="531.2,713.6">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_42" sap:VirtualizedContainerService.HintSize="656,864">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_268" sap:VirtualizedContainerService.HintSize="678.4,1334.4">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_43" sap:VirtualizedContainerService.HintSize="486.4,52.8">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_269" sap:VirtualizedContainerService.HintSize="508.8,850.4">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_90" sap:VirtualizedContainerService.HintSize="313.6,88" />
      <sap2010:ViewStateData Id="Sequence_270" sap:VirtualizedContainerService.HintSize="508.8,240.8">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_91" sap:VirtualizedContainerService.HintSize="313.6,88" />
      <sap2010:ViewStateData Id="Sequence_271" sap:VirtualizedContainerService.HintSize="508.8,304.8">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_272" sap:VirtualizedContainerService.HintSize="531.2,1721.6">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_108" sap:VirtualizedContainerService.HintSize="336,60.8" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_92" sap:VirtualizedContainerService.HintSize="313.6,88" />
      <sap2010:ViewStateData Id="Sequence_273" sap:VirtualizedContainerService.HintSize="336,304.8">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_274" sap:VirtualizedContainerService.HintSize="358.4,528">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_23" sap:VirtualizedContainerService.HintSize="534.4,22.4">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_17" sap:VirtualizedContainerService.HintSize="548.8,1981.6">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_109" sap:VirtualizedContainerService.HintSize="464,60.8" />
      <sap2010:ViewStateData Id="ShouldStop_6" sap:VirtualizedContainerService.HintSize="464,22.4" />
      <sap2010:ViewStateData Id="Assign_110" sap:VirtualizedContainerService.HintSize="243.2,60.8" />
      <sap2010:ViewStateData Id="Sequence_276" sap:VirtualizedContainerService.HintSize="265.6,185.6">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_277" sap:VirtualizedContainerService.HintSize="288,310.4">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_44" sap:VirtualizedContainerService.HintSize="464,460.8">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_278" sap:VirtualizedContainerService.HintSize="486.4,128.8">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_93" sap:VirtualizedContainerService.HintSize="313.6,88" />
      <sap2010:ViewStateData Id="If_45" sap:VirtualizedContainerService.HintSize="464,238.4">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_279" sap:VirtualizedContainerService.HintSize="486.4,391.2">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_94" sap:VirtualizedContainerService.HintSize="313.6,88" />
      <sap2010:ViewStateData Id="Sequence_280" sap:VirtualizedContainerService.HintSize="486.4,304.8">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_281" sap:VirtualizedContainerService.HintSize="508.8,1104.8">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_111" sap:VirtualizedContainerService.HintSize="336,60.8" />
      <sap2010:ViewStateData Id="Assign_112" sap:VirtualizedContainerService.HintSize="336,60.8" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_95" sap:VirtualizedContainerService.HintSize="313.6,88" />
      <sap2010:ViewStateData Id="Sequence_282" sap:VirtualizedContainerService.HintSize="336,304.8">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_283" sap:VirtualizedContainerService.HintSize="358.4,628.8">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_24" sap:VirtualizedContainerService.HintSize="403.2,22.4">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_18" sap:VirtualizedContainerService.HintSize="526.4,1365.6">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_296" sap:VirtualizedContainerService.HintSize="336,128.8">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_96" sap:VirtualizedContainerService.HintSize="313.6,88" />
      <sap2010:ViewStateData Id="Sequence_284" sap:VirtualizedContainerService.HintSize="336,240.8">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_97" sap:VirtualizedContainerService.HintSize="313.6,88" />
      <sap2010:ViewStateData Id="Sequence_285" sap:VirtualizedContainerService.HintSize="336,304.8">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_286" sap:VirtualizedContainerService.HintSize="358.4,878.4">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_113" sap:VirtualizedContainerService.HintSize="336,60.8" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_98" sap:VirtualizedContainerService.HintSize="313.6,88" />
      <sap2010:ViewStateData Id="Sequence_287" sap:VirtualizedContainerService.HintSize="336,304.8">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_288" sap:VirtualizedContainerService.HintSize="358.4,528">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_25" sap:VirtualizedContainerService.HintSize="403.2,22.4">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_114" sap:VirtualizedContainerService.HintSize="336,60.8" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_99" sap:VirtualizedContainerService.HintSize="313.6,88" />
      <sap2010:ViewStateData Id="Sequence_289" sap:VirtualizedContainerService.HintSize="336,304.8">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_290" sap:VirtualizedContainerService.HintSize="358.4,528">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_26" sap:VirtualizedContainerService.HintSize="403.2,22.4">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_100" sap:VirtualizedContainerService.HintSize="313.6,212">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_19" sap:VirtualizedContainerService.HintSize="417.6,495.2">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Transition_4" sap:VirtualizedContainerService.HintSize="429.6,509.6">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:PointCollection x:Key="ConnectorLocation">348.36,542.4 348.36,601 586,601 586,57.34 508.1,57.34</av:PointCollection>
            <x:Int32 x:Key="SrcConnectionPointIndex">23</x:Int32>
            <x:Int32 x:Key="DestConnectionPointIndex">40</x:Int32>
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Transition_1" sap:VirtualizedContainerService.HintSize="430.4,513.6">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:PointCollection x:Key="ConnectorLocation">401.16,542.4 401.16,583.4 565.2,583.4 565.2,211.02 504.9,211.02</av:PointCollection>
            <x:Int32 x:Key="SrcConnectionPointIndex">43</x:Int32>
            <x:Int32 x:Key="DestConnectionPointIndex">20</x:Int32>
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Transition_5" sap:VirtualizedContainerService.HintSize="430.4,557.6">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:PointCollection x:Key="ConnectorLocation">443.4,542.4 443.4,577 534.8,577 534.8,250.38 504.9,250.38</av:PointCollection>
            <x:Int32 x:Key="SrcConnectionPointIndex">59</x:Int32>
            <x:Int32 x:Key="DestConnectionPointIndex">52</x:Int32>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="State_3" sap:VirtualizedContainerService.HintSize="211.2,162.4">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">285,380</av:Point>
            <av:Size x:Key="ShapeSize">211.2,162.4</av:Size>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Double x:Key="StateContainerWidth">197</x:Double>
            <x:Double x:Key="StateContainerHeight">34</x:Double>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Transition_6" sap:VirtualizedContainerService.HintSize="430,796">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:PointCollection x:Key="ConnectorLocation">389.7,279.9 389.7,309.9 390.6,309.9 390.6,380</av:PointCollection>
            <x:Int32 x:Key="SrcConnectionPointIndex">39</x:Int32>
            <x:Int32 x:Key="DestConnectionPointIndex">38</x:Int32>
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Throw_1" sap:VirtualizedContainerService.HintSize="200,82.4">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_46" sap:VirtualizedContainerService.HintSize="464,233.6" />
      <sap2010:ViewStateData Id="Sequence_297" sap:VirtualizedContainerService.HintSize="486.4,402.4">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_101" sap:VirtualizedContainerService.HintSize="313.6,88" />
      <sap2010:ViewStateData Id="Sequence_291" sap:VirtualizedContainerService.HintSize="486.4,240.8">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_102" sap:VirtualizedContainerService.HintSize="313.6,88" />
      <sap2010:ViewStateData Id="Sequence_292" sap:VirtualizedContainerService.HintSize="486.4,224.8">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_293" sap:VirtualizedContainerService.HintSize="508.8,1072">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_103" sap:VirtualizedContainerService.HintSize="313.6,88" />
      <sap2010:ViewStateData Id="Sequence_294" sap:VirtualizedContainerService.HintSize="200,224.8">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Rethrow_1" sap:VirtualizedContainerService.HintSize="200,22.4" />
      <sap2010:ViewStateData Id="Sequence_295" sap:VirtualizedContainerService.HintSize="358.4,400">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_27" sap:VirtualizedContainerService.HintSize="512,22.4">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_20" sap:VirtualizedContainerService.HintSize="526.4,1332">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="State_1" sap:VirtualizedContainerService.HintSize="160,98.4">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">50,184</av:Point>
            <av:Size x:Key="ShapeSize">160,98.4</av:Size>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Double x:Key="StateContainerWidth">146.39999999999998</x:Double>
            <x:Double x:Key="StateContainerHeight">34</x:Double>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Transition_7" sap:VirtualizedContainerService.HintSize="430,853">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:PointCollection x:Key="ConnectorLocation">389.7,279.9 389.7,309.9 130.8,309.9 130.8,282.4</av:PointCollection>
            <x:Int32 x:Key="SrcConnectionPointIndex">39</x:Int32>
            <x:Int32 x:Key="DestConnectionPointIndex">39</x:Int32>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="State_4" sap:VirtualizedContainerService.HintSize="230.4,98.4">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">274.5,181.5</av:Point>
            <av:Size x:Key="ShapeSize">230.4,98.4</av:Size>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Double x:Key="StateContainerWidth">217</x:Double>
            <x:Double x:Key="StateContainerHeight">34</x:Double>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Transition_2" sap:VirtualizedContainerService.HintSize="430,796">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Int32 x:Key="SrcConnectionPointIndex">39</x:Int32>
            <x:Int32 x:Key="DestConnectionPointIndex">38</x:Int32>
            <av:PointCollection x:Key="ConnectorLocation">391.3,97.3 391.3,127.3 389.7,127.3 389.7,181.5</av:PointCollection>
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Transition_3" sap:VirtualizedContainerService.HintSize="430,796">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:PointCollection x:Key="ConnectorLocation">391.3,97.3 391.3,127.3 122,127.3 122,184</av:PointCollection>
            <x:Int32 x:Key="SrcConnectionPointIndex">39</x:Int32>
            <x:Int32 x:Key="DestConnectionPointIndex">34</x:Int32>
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="State_2" sap:VirtualizedContainerService.HintSize="574.4,2404">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">274.5,8.5</av:Point>
            <av:Size x:Key="ShapeSize">233.6,88.8</av:Size>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Double x:Key="StateContainerWidth">220</x:Double>
            <x:Double x:Key="StateContainerHeight">25</x:Double>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="StateMachine_1" sap:VirtualizedContainerService.HintSize="760,764">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <av:Point x:Key="ShapeLocation">70,12.4</av:Point>
            <x:Double x:Key="StateContainerWidth">745.60000000000014</x:Double>
            <x:Double x:Key="StateContainerHeight">682.80000000000007</x:Double>
            <av:PointCollection x:Key="ConnectorLocation">130,50 160,50 160,52.9 274.5,52.9</av:PointCollection>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Main2_1" sap:VirtualizedContainerService.HintSize="800,844" />
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>