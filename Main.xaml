<Activity mc:Ignorable="sap sap2010 sads" x:Class="Main" mva:VisualBasic.Settings="{x:Null}" sap2010:WorkflowViewState.IdRef="Main2_1"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities"
 xmlns:njl="clr-namespace:Newtonsoft.Json.Linq;assembly=Newtonsoft.Json"
 xmlns:s="clr-namespace:System;assembly=mscorlib"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:sd="clr-namespace:System.Data;assembly=System.Data"
 xmlns:ss="clr-namespace:System.Security;assembly=mscorlib"
 xmlns:ui="http://schemas.uipath.com/workflow/activities"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>Newtonsoft.Json.Linq</x:String>
      <x:String>Newtonsoft.Json</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>System.Net</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.Core</AssemblyReference>
      <AssemblyReference>UiPath.Core.Activities</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.VisualStudio.Services.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <StateMachine sap2010:Annotation.AnnotationText="-- ReFrameWork - Robotic Enterprise Framework --&#xA;-- TEMPLATE--" DisplayName="General Business Process" sap2010:WorkflowViewState.IdRef="StateMachine_1">
    <StateMachine.InitialState>
      <State x:Name="__ReferenceID3" sap2010:Annotation.AnnotationText="Read Config, Init Applications" DisplayName="Init" sap2010:WorkflowViewState.IdRef="State_2">
        <State.Entry>
          <TryCatch DisplayName="Catch intialization exceptions" sap2010:WorkflowViewState.IdRef="TryCatch_2">
            <TryCatch.Try>
              <Sequence DisplayName="Init sequence" sap2010:WorkflowViewState.IdRef="Sequence_107">
                <Sequence DisplayName="System - Reserved" sap2010:WorkflowViewState.IdRef="Sequence_105">
                  <Sequence DisplayName="Logging" sap2010:WorkflowViewState.IdRef="Sequence_101">
                    <ui:AddLogFields sap2010:Annotation.AnnotationText="Add Log Fields: &#xA;wbBusinessProcessName&#xA;wbType&#xA;wbParent&#xA;wbLevel" DisplayName="wb Hierarchy" sap2010:WorkflowViewState.IdRef="AddLogFields_25">
                      <ui:AddLogFields.Fields>
                        <InArgument x:TypeArguments="x:String" x:Key="wbBusinessProcessName">[Config("wbBusinessProcessName").ToString]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="wbType">[wbType]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="wbParent">[string.Empty]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="wbLevel">[wbLevel.ToString]</InArgument>
                      </ui:AddLogFields.Fields>
                    </ui:AddLogFields>
                    <ui:AddLogFields sap2010:Annotation.AnnotationText="Add Log Fields: &#xA;wbStart" DisplayName="wb Execution" sap2010:WorkflowViewState.IdRef="AddLogFields_26">
                      <ui:AddLogFields.Fields>
                        <InArgument x:TypeArguments="x:String" x:Key="wbStart">[datetime.Now.ToString]</InArgument>
                      </ui:AddLogFields.Fields>
                    </ui:AddLogFields>
                    <ui:AddLogFields sap2010:Annotation.AnnotationText="wbProgramState" DisplayName="wb Custom" sap2010:WorkflowViewState.IdRef="AddLogFields_27">
                      <ui:AddLogFields.Fields>
                        <InArgument x:TypeArguments="x:String" x:Key="wbProgramState">Init</InArgument>
                      </ui:AddLogFields.Fields>
                    </ui:AddLogFields>
                  </Sequence>
                  <Sequence DisplayName="Initialization" sap2010:WorkflowViewState.IdRef="Sequence_104">
                    <Assign DisplayName="Initialize SystemError" sap2010:WorkflowViewState.IdRef="Assign_51">
                      <Assign.To>
                        <OutArgument x:TypeArguments="s:Exception">[SystemError]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="s:Exception">[Nothing]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <If Condition="[Config is Nothing]" DisplayName="If first run - read Config file" sap2010:WorkflowViewState.IdRef="If_21">
                      <If.Then>
                        <Sequence DisplayName="First Run" sap2010:WorkflowViewState.IdRef="Sequence_103">
                          <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke InitAllSettings workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_46" UnSafe="False" WorkflowFileName="Framework\InitAllSettings.xaml">
                            <ui:InvokeWorkflowFile.Arguments>
                              <InArgument x:TypeArguments="x:String" x:Key="in_ConfigFile">Data\Config.xlsx</InArgument>
                              <InArgument x:TypeArguments="s:String[]" x:Key="in_ConfigSheets">[{"Settings", "Constants"}]</InArgument>
                              <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="out_Config">[Config]</OutArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="in_wbType">InitAllSettings</InArgument>
                              <InArgument x:TypeArguments="x:Int32" x:Key="in_wbLevel">[wbLevel+1]</InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="in_wbParent">[wbType]</InArgument>
                            </ui:InvokeWorkflowFile.Arguments>
                          </ui:InvokeWorkflowFile>
                          <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke KillAllProcesses workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_47" UnSafe="False" WorkflowFileName="ProcessLayer\KillAllProcesses.xaml">
                            <ui:InvokeWorkflowFile.Arguments>
                              <InArgument x:TypeArguments="x:String" x:Key="in_wbParent">[wbType]</InArgument>
                              <InArgument x:TypeArguments="x:Int32" x:Key="in_wbLevel">[wbLevel+1]</InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="in_wbType">KillAllProcesses</InArgument>
                            </ui:InvokeWorkflowFile.Arguments>
                          </ui:InvokeWorkflowFile>
                          <If Condition="[TransactionItem isNot Nothing AndAlso (TransactionItem.GetType is GetType(Uipath.Core.QueueItem))]" DisplayName="If TransactionItem is a QueueItem" sap2010:WorkflowViewState.IdRef="If_20">
                            <If.Then>
                              <Sequence DisplayName="Obtain Information about Queue" sap2010:WorkflowViewState.IdRef="Sequence_102">
                                <Sequence.Variables>
                                  <Variable x:TypeArguments="x:String" Name="token" />
                                  <Variable x:TypeArguments="njl:JObject" Name="jsonQueueProcessingStatus" />
                                  <Variable x:TypeArguments="x:String" Name="username" />
                                  <Variable x:TypeArguments="ss:SecureString" Name="securePassword" />
                                </Sequence.Variables>
                                <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke GetAppCredentials workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_48" UnSafe="False" WorkflowFileName="Framework\GetAppCredentials.xaml">
                                  <ui:InvokeWorkflowFile.Arguments>
                                    <OutArgument x:TypeArguments="x:String" x:Key="out_Username">[username]</OutArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="in_Credential">[Config("OrchestratorCredentialName").ToString]</InArgument>
                                    <OutArgument x:TypeArguments="ss:SecureString" x:Key="out_Password">[securePassword]</OutArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="in_wbType">GetAppCredentials</InArgument>
                                    <InArgument x:TypeArguments="x:Int32" x:Key="in_wbLevel">[wbLevel+1]</InArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="in_wbParent">[wbType]</InArgument>
                                  </ui:InvokeWorkflowFile.Arguments>
                                </ui:InvokeWorkflowFile>
                                <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke GetAuthenticateToken workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_49" UnSafe="False" WorkflowFileName="Framework\Orchestrator\GetAuthenticateToken.xaml">
                                  <ui:InvokeWorkflowFile.Arguments>
                                    <InArgument x:TypeArguments="x:String" x:Key="in_orchestratorURL">[Config("OrchestratorURL").ToString]</InArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="in_tenancyName">[Config("OrchestratorTenancyName").ToString]</InArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="in_usernameOrEmailAddress">[username]</InArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="in_password">[new System.Net.NetworkCredential(string.Empty, securePassword).Password]</InArgument>
                                    <OutArgument x:TypeArguments="x:String" x:Key="out_token">[token]</OutArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="in_wbType">GetAuthenticateToken</InArgument>
                                    <InArgument x:TypeArguments="x:Int32" x:Key="in_wbLevel">[wbLevel+1]</InArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="in_wbParent">[wbType]</InArgument>
                                  </ui:InvokeWorkflowFile.Arguments>
                                </ui:InvokeWorkflowFile>
                                <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke GetQueueProcessingStatus workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_50" UnSafe="False" WorkflowFileName="Framework\Orchestrator\Queues\GetQueueProcessingStatus.xaml">
                                  <ui:InvokeWorkflowFile.Arguments>
                                    <InArgument x:TypeArguments="x:String" x:Key="in_orchestratorURL">[Config("OrchestratorURL").ToString]</InArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="in_token">[token]</InArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="in_queueName">[Config("OrchestratorQueueName").ToString]</InArgument>
                                    <OutArgument x:TypeArguments="njl:JObject" x:Key="out_jsonQueueProcessingStatus">[jsonQueueProcessingStatus]</OutArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="in_wbType">GetQueueProcessingStatus</InArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="in_wbParent">[wbType]</InArgument>
                                    <InArgument x:TypeArguments="x:Int32" x:Key="in_wbLevel">[wbLevel+1]</InArgument>
                                  </ui:InvokeWorkflowFile.Arguments>
                                </ui:InvokeWorkflowFile>
                                <If Condition="[string.Compare(jsonQueueProcessingStatus.Item(&quot;QueueDefinitionAcceptAutomaticallyRetry&quot;).ToString, &quot;true&quot;, true) = 0]" DisplayName="If Queue AutoRetry is enabled, MaxRetryNumber becomes the Queue Retry number" sap2010:WorkflowViewState.IdRef="If_19">
                                  <If.Then>
                                    <Assign DisplayName="Assign MaxRetryNumber" sap2010:WorkflowViewState.IdRef="Assign_52">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:Object">[Config("MaxRetryNumber")]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="njl:JToken">[jsonQueueProcessingStatus.Item("QueueDefinitionMaxNumberOfRetries")]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                  </If.Then>
                                  <If.Else>
                                    <Assign DisplayName="Assign MaxRetryNumber" sap2010:WorkflowViewState.IdRef="Assign_53">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:Object">[Config("MaxRetryNumber")]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:Object">[0]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                  </If.Else>
                                </If>
                              </Sequence>
                            </If.Then>
                          </If>
                        </Sequence>
                      </If.Then>
                    </If>
                  </Sequence>
                </Sequence>
                <Sequence DisplayName="Process" sap2010:WorkflowViewState.IdRef="Sequence_106">
                  <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke InitiAllApplications workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_51" UnSafe="False" WorkflowFileName="ProcessLayer\InitAllApplications.xaml">
                    <ui:InvokeWorkflowFile.Arguments>
                      <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[Config]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_wbType">InitAllApplications</InArgument>
                      <InArgument x:TypeArguments="x:Int32" x:Key="in_wbLevel">[wbLevel+1]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_wbParent">[wbType]</InArgument>
                    </ui:InvokeWorkflowFile.Arguments>
                  </ui:InvokeWorkflowFile>
                </Sequence>
              </Sequence>
            </TryCatch.Try>
            <TryCatch.Catches>
              <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_3">
                <ActivityAction x:TypeArguments="s:Exception">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Exception Handling" sap2010:WorkflowViewState.IdRef="Sequence_98">
                    <Assign DisplayName="Assign exception to SystemError" sap2010:WorkflowViewState.IdRef="Assign_41">
                      <Assign.To>
                        <OutArgument x:TypeArguments="s:Exception">[SystemError]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="s:Exception">[exception]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign DisplayName="Create End Reason" sap2010:WorkflowViewState.IdRef="Assign_46">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[wbEndMessage]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">["System error at initialization: " + SystemError.Message + " at Source: " + SystemError.Source]</InArgument>
                      </Assign.Value>
                    </Assign>
                  </Sequence>
                </ActivityAction>
              </Catch>
            </TryCatch.Catches>
          </TryCatch>
        </State.Entry>
        <State.Transitions>
          <Transition DisplayName="Success" sap2010:WorkflowViewState.IdRef="Transition_2" Condition="[SystemError is Nothing]">
            <Transition.To>
              <State x:Name="__ReferenceID4" sap2010:Annotation.AnnotationText="Get next transaction input data" DisplayName="Get Transaction Data" sap2010:WorkflowViewState.IdRef="State_4">
                <State.Entry>
                  <TryCatch sap2010:Annotation.AnnotationText="Data retrieval mechanism. The TransactionNumber variable holds the current transaction number. Incrementing this number means getting the next transaction. For a robot retry, the number is not increased, in case of application exception, until the max retry number.&#xA;TransactionItem type needs to be changed accordingly." DisplayName="Try to get Transaction Data" sap2010:WorkflowViewState.IdRef="TryCatch_8">
                    <TryCatch.Try>
                      <Flowchart DisplayName="Retrieve Data" sap2010:WorkflowViewState.IdRef="Flowchart_4">
                        <Flowchart.Variables>
                          <Variable x:TypeArguments="x:Boolean" Name="ShouldStop" />
                        </Flowchart.Variables>
                        <Flowchart.StartNode>
                          <FlowStep x:Name="__ReferenceID0" sap2010:WorkflowViewState.IdRef="FlowStep_13">
                            <Sequence DisplayName="System - Reserved" sap2010:WorkflowViewState.IdRef="Sequence_49">
                              <ui:AddLogFields sap2010:Annotation.AnnotationText="wbProgramState" DisplayName="wb Custom" sap2010:WorkflowViewState.IdRef="AddLogFields_19">
                                <ui:AddLogFields.Fields>
                                  <InArgument x:TypeArguments="x:String" x:Key="wbProgramState">GetTransactionData</InArgument>
                                </ui:AddLogFields.Fields>
                              </ui:AddLogFields>
                              <ui:ShouldStop DisplayName="Check Stop Signal" sap2010:WorkflowViewState.IdRef="ShouldStop_3" Result="[ShouldStop]" />
                              <If Condition="[ShouldStop]" DisplayName="If stop requested" sap2010:WorkflowViewState.IdRef="If_18">
                                <If.Then>
                                  <Sequence DisplayName="Orchestrator stop" sap2010:WorkflowViewState.IdRef="Sequence_62">
                                    <Sequence DisplayName="Logging and cleanup" sap2010:WorkflowViewState.IdRef="Sequence_61">
                                      <Assign DisplayName="Create End Reason" sap2010:WorkflowViewState.IdRef="Assign_45">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:String">[wbEndMessage]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:String">Stop process requested from Orchestrator</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <Assign DisplayName="End Process" sap2010:WorkflowViewState.IdRef="Assign_33">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="ui:QueueItem">[TransactionItem]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="ui:QueueItem">[Nothing]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                    </Sequence>
                                  </Sequence>
                                </If.Then>
                              </If>
                            </Sequence>
                            <FlowStep.Next>
                              <FlowDecision x:Name="__ReferenceID1" Condition="[ShouldStop]" DisplayName="Should Stop or Get Next" sap2010:WorkflowViewState.IdRef="FlowDecision_2">
                                <FlowDecision.False>
                                  <FlowStep x:Name="__ReferenceID2" sap2010:WorkflowViewState.IdRef="FlowStep_35">
                                    <Sequence DisplayName="Process" sap2010:WorkflowViewState.IdRef="Sequence_86">
                                      <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke GetTransactionData workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_42" UnSafe="False" WorkflowFileName="ProcessLayer\GetTransactionData.xaml">
                                        <ui:InvokeWorkflowFile.Arguments>
                                          <InArgument x:TypeArguments="x:Int32" x:Key="in_TransactionNumber">[TransactionNumber]</InArgument>
                                          <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[Config]</InArgument>
                                          <OutArgument x:TypeArguments="ui:QueueItem" x:Key="out_TransactionItem">[TransactionItem]</OutArgument>
                                          <InOutArgument x:TypeArguments="sd:DataTable" x:Key="io_TransactionData">[TransactionData]</InOutArgument>
                                          <InArgument x:TypeArguments="x:Int32" x:Key="in_wbLevel">[wbLevel+1]</InArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="in_wbParent">[wbType]</InArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="in_wbType">GetTransactionData</InArgument>
                                        </ui:InvokeWorkflowFile.Arguments>
                                      </ui:InvokeWorkflowFile>
                                    </Sequence>
                                  </FlowStep>
                                </FlowDecision.False>
                              </FlowDecision>
                            </FlowStep.Next>
                          </FlowStep>
                        </Flowchart.StartNode>
                        <x:Reference>__ReferenceID0</x:Reference>
                        <x:Reference>__ReferenceID1</x:Reference>
                        <x:Reference>__ReferenceID2</x:Reference>
                      </Flowchart>
                    </TryCatch.Try>
                    <TryCatch.Catches>
                      <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_9">
                        <ActivityAction x:TypeArguments="s:Exception">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                          </ActivityAction.Argument>
                          <Sequence DisplayName="Exception Handler" sap2010:WorkflowViewState.IdRef="Sequence_53">
                            <Assign DisplayName="Assign exception to SystemError" sap2010:WorkflowViewState.IdRef="Assign_42">
                              <Assign.To>
                                <OutArgument x:TypeArguments="s:Exception">[SystemError]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="s:Exception">[exception]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <Assign DisplayName="Create End Reason" sap2010:WorkflowViewState.IdRef="Assign_47">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[wbEndMessage]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">[Config("LogMessage_GetTransactionDataError").ToString+TransactionNumber.ToString+". "+exception.Message+" at Source: "+exception.Source]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <Assign DisplayName="End Process " sap2010:WorkflowViewState.IdRef="Assign_32">
                              <Assign.To>
                                <OutArgument x:TypeArguments="ui:QueueItem">[TransactionItem]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="ui:QueueItem">[Nothing]</InArgument>
                              </Assign.Value>
                            </Assign>
                          </Sequence>
                        </ActivityAction>
                      </Catch>
                    </TryCatch.Catches>
                  </TryCatch>
                </State.Entry>
                <State.Transitions>
                  <Transition DisplayName="New Transaction" sap2010:WorkflowViewState.IdRef="Transition_6" Condition="[TransactionItem IsNot Nothing]">
                    <Transition.To>
                      <State x:Name="__ReferenceID6" sap2010:Annotation.AnnotationText="A transaction either succeeds or fails with a Business Rule Exception or a System Error. For System Error, it can be retried." DisplayName="Process Transaction" sap2010:WorkflowViewState.IdRef="State_3">
                        <State.Entry>
                          <TryCatch DisplayName="Process Transaction" sap2010:WorkflowViewState.IdRef="TryCatch_1">
                            <TryCatch.Try>
                              <Sequence DisplayName="Process sequence" sap2010:WorkflowViewState.IdRef="Sequence_118">
                                <Sequence DisplayName="System - reserved" sap2010:WorkflowViewState.IdRef="Sequence_116">
                                  <ui:AddLogFields sap2010:Annotation.AnnotationText="wbProgramState" DisplayName="wb Custom" sap2010:WorkflowViewState.IdRef="AddLogFields_30">
                                    <ui:AddLogFields.Fields>
                                      <InArgument x:TypeArguments="x:String" x:Key="wbProgramState">ProcessTransaction</InArgument>
                                    </ui:AddLogFields.Fields>
                                  </ui:AddLogFields>
                                  <Assign sap2010:WorkflowViewState.IdRef="Assign_54">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="ui:BusinessRuleException">[BusinessRuleException]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="ui:BusinessRuleException">[Nothing]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                </Sequence>
                                <Sequence DisplayName="Process" sap2010:WorkflowViewState.IdRef="Sequence_117">
                                  <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke ProcessTransaction workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_53" UnSafe="False" WorkflowFileName="ProcessLayer\Process.xaml">
                                    <ui:InvokeWorkflowFile.Arguments>
                                      <InArgument x:TypeArguments="ui:QueueItem" x:Key="in_TransactionItem">[TransactionItem]</InArgument>
                                      <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[Config]</InArgument>
                                      <InOutArgument x:TypeArguments="x:Int32" x:Key="io_TransactionNumber">[TransactionNumber]</InOutArgument>
                                      <InOutArgument x:TypeArguments="x:Int32" x:Key="io_RetryNumber">[RetryNumber]</InOutArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="in_wbParent">[wbType]</InArgument>
                                      <InArgument x:TypeArguments="x:Int32" x:Key="in_wbLevel">[wbLevel+1]</InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="in_wbType">ProcessTransaction</InArgument>
                                    </ui:InvokeWorkflowFile.Arguments>
                                  </ui:InvokeWorkflowFile>
                                </Sequence>
                              </Sequence>
                            </TryCatch.Try>
                            <TryCatch.Catches>
                              <Catch x:TypeArguments="ui:BusinessRuleException" sap2010:WorkflowViewState.IdRef="Catch`1_1">
                                <ActivityAction x:TypeArguments="ui:BusinessRuleException">
                                  <ActivityAction.Argument>
                                    <DelegateInArgument x:TypeArguments="ui:BusinessRuleException" Name="exception" />
                                  </ActivityAction.Argument>
                                  <Assign DisplayName="Set transaction status to Rule Exception" sap2010:WorkflowViewState.IdRef="Assign_49">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="ui:BusinessRuleException">[BusinessRuleException]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="ui:BusinessRuleException">[exception]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                </ActivityAction>
                              </Catch>
                              <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_2">
                                <ActivityAction x:TypeArguments="s:Exception">
                                  <ActivityAction.Argument>
                                    <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                  </ActivityAction.Argument>
                                  <Assign DisplayName="Set SystemError" sap2010:WorkflowViewState.IdRef="Assign_48">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="s:Exception">[SystemError]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="s:Exception">[exception]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                </ActivityAction>
                              </Catch>
                            </TryCatch.Catches>
                            <TryCatch.Finally>
                              <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke NextTransaction workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_44" UnSafe="False" WorkflowFileName="Framework\NextTransaction.xaml">
                                <ui:InvokeWorkflowFile.Arguments>
                                  <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[Config]</InArgument>
                                  <InArgument x:TypeArguments="s:Exception" x:Key="in_SystemError">[SystemError]</InArgument>
                                  <InArgument x:TypeArguments="ui:BusinessRuleException" x:Key="in_BusinessRuleException">[BusinessRuleException]</InArgument>
                                  <InOutArgument x:TypeArguments="x:Int32" x:Key="io_RetryNumber">[RetryNumber]</InOutArgument>
                                  <InOutArgument x:TypeArguments="x:Int32" x:Key="io_TransactionNumber">[TransactionNumber]</InOutArgument>
                                  <InArgument x:TypeArguments="ui:QueueItem" x:Key="in_TransactionItem">[TransactionItem]</InArgument>
                                  <InArgument x:TypeArguments="x:Int32" x:Key="in_wbLevel">[wbLevel+1]</InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="in_wbParent">[wbType]</InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="in_wbType">NextTransaction</InArgument>
                                </ui:InvokeWorkflowFile.Arguments>
                              </ui:InvokeWorkflowFile>
                            </TryCatch.Finally>
                          </TryCatch>
                        </State.Entry>
                        <State.Transitions>
                          <Transition DisplayName="Error" sap2010:WorkflowViewState.IdRef="Transition_4" To="{x:Reference __ReferenceID3}" Condition="[SystemError IsNot Nothing]" />
                          <Transition DisplayName="Rule Exception" sap2010:WorkflowViewState.IdRef="Transition_1" To="{x:Reference __ReferenceID4}" Condition="[BusinessRuleException IsNot Nothing]" />
                          <Transition sap2010:Annotation.AnnotationText="No need for any action here, in case of success simply go to next transaction" DisplayName="Success" sap2010:WorkflowViewState.IdRef="Transition_5" To="{x:Reference __ReferenceID4}" Condition="[SystemError Is Nothing And BusinessRuleException is Nothing]" />
                        </State.Transitions>
                      </State>
                    </Transition.To>
                  </Transition>
                  <Transition sap2010:Annotation.AnnotationText="This is a simple mecanism to stop the process.&#xA;In reallife scenario you can stop the process when there is no more data to process or on a schedule." DisplayName="No Data" sap2010:WorkflowViewState.IdRef="Transition_7">
                    <Transition.To>
                      <State x:Name="__ReferenceID5" sap2010:Annotation.AnnotationText="Process stops here" DisplayName="End Process" sap2010:WorkflowViewState.IdRef="State_1" IsFinal="True">
                        <State.Entry>
                          <Sequence DisplayName="End Process Sequence" sap2010:WorkflowViewState.IdRef="Sequence_113">
                            <Sequence DisplayName="System - reserved" sap2010:WorkflowViewState.IdRef="Sequence_111">
                              <Sequence DisplayName="Logging" sap2010:WorkflowViewState.IdRef="Sequence_110">
                                <ui:AddLogFields sap2010:Annotation.AnnotationText="wbProgramState" DisplayName="wb Custom" sap2010:WorkflowViewState.IdRef="AddLogFields_28">
                                  <ui:AddLogFields.Fields>
                                    <InArgument x:TypeArguments="x:String" x:Key="wbProgramState">EndProcess</InArgument>
                                  </ui:AddLogFields.Fields>
                                </ui:AddLogFields>
                                <ui:AddLogFields sap2010:Annotation.AnnotationText="Add Log Fields: &#xA;wbStatus&#xA;wbDurationSec&#xA;wbDurationHrs" DisplayName="wb Execution" sap2010:WorkflowViewState.IdRef="AddLogFields_29">
                                  <ui:AddLogFields.Fields>
                                    <InArgument x:TypeArguments="x:String" x:Key="wbStatus">Successful</InArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="wbDurationSec">[now.Subtract(wbStartTime).TotalSeconds.ToString]</InArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="wbDurationHrs">[now.Subtract(wbStartTime).TotalHours.ToString]</InArgument>
                                  </ui:AddLogFields.Fields>
                                </ui:AddLogFields>
                                <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_36" Level="Info" Message="[wbEndMessage]" />
                              </Sequence>
                            </Sequence>
                            <Sequence DisplayName="Process Layer" sap2010:WorkflowViewState.IdRef="Sequence_112">
                              <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke CloseAllApplications workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_52" UnSafe="False" WorkflowFileName="ProcessLayer\CloseAllApplications.xaml">
                                <ui:InvokeWorkflowFile.Arguments>
                                  <InArgument x:TypeArguments="x:String" x:Key="in_wbType">CloseAllApplications</InArgument>
                                  <InArgument x:TypeArguments="x:Int32" x:Key="in_wbLevel">[wbLevel+1]</InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="in_wbParent">[wbType]</InArgument>
                                </ui:InvokeWorkflowFile.Arguments>
                              </ui:InvokeWorkflowFile>
                            </Sequence>
                          </Sequence>
                        </State.Entry>
                      </State>
                    </Transition.To>
                    <Transition.Action>
                      <Assign DisplayName="Assign wbEndMessage" sap2010:WorkflowViewState.IdRef="Assign_50">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[wbEndMessage]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">["Process finished due to no more transaction data"]</InArgument>
                        </Assign.Value>
                      </Assign>
                    </Transition.Action>
                    <Transition.Condition>[TransactionItem Is Nothing]</Transition.Condition>
                  </Transition>
                </State.Transitions>
              </State>
            </Transition.To>
          </Transition>
          <Transition DisplayName="System Error" sap2010:WorkflowViewState.IdRef="Transition_3" To="{x:Reference __ReferenceID5}" Condition="[SystemError isNot Nothing]" />
        </State.Transitions>
      </State>
    </StateMachine.InitialState>
    <x:Reference>__ReferenceID4</x:Reference>
    <x:Reference>__ReferenceID6</x:Reference>
    <x:Reference>__ReferenceID5</x:Reference>
    <x:Reference>__ReferenceID3</x:Reference>
    <StateMachine.Variables>
      <Variable x:TypeArguments="ui:QueueItem" Name="TransactionItem" />
      <Variable x:TypeArguments="s:Exception" Name="SystemError" />
      <Variable x:TypeArguments="ui:BusinessRuleException" Name="BusinessRuleException" />
      <Variable x:TypeArguments="x:Int32" Default="1" Name="TransactionNumber" />
      <Variable x:TypeArguments="scg:Dictionary(x:String, x:Object)" Name="Config" />
      <Variable x:TypeArguments="x:Int32" Default="0" Name="RetryNumber" />
      <Variable x:TypeArguments="sd:DataTable" Name="TransactionData" />
      <Variable x:TypeArguments="s:DateTime" Default="[datetime.now()]" Name="wbStartTime" />
      <Variable x:TypeArguments="x:String" Default="Process ended Succesfully" Name="wbEndMessage" />
      <Variable x:TypeArguments="x:String" Default="MainTask" Name="wbType" />
      <Variable x:TypeArguments="x:Int32" Default="0" Name="wbLevel" />
    </StateMachine.Variables>
    <sads:DebugSymbol.Symbol>d11DOlxVc2Vyc1xtaWhhaS5kdW5hcmVhbnVcR29vZ2xlIERyaXZlXFdvcmtzcGFjZVxVaVBhdGhcVGVtcGxhdGVzXFVpUGF0aF9SRUZyYW1ld29ya1xNYWluLnhhbWzEAUgDiAQSAgEB/gMz/gM2AwGfAoAEM4AENgMBngKCBDaCBEgDAZ0CgwQ0gwRPAwGcAoQENIQEPgMBmwKFBDOFBDYDAZoC9QEP7wMXAwHYAeMCF7wDHwMBmwHBAxfgAx8DAYUBSgf0Aw8CAQL3ARPeAh4DAeEB4QJ24QKXAQMB3wHsAyvsA0cDAd4B4wMX6gMgAwHaAeUCG7UDJgMBogG4A5YBuAOzAQMBnwG5A58BuQPGAQMBngG6A4oCugPJAgMBnQHDAxveAyYDAYcBTAvwARYCAQnzAWbzAYABAgEG8gONAfIDqgECAQT5ARe5AiMDAfQBwQIb2gImAwHiAegDQugDdgMB3QHlA0PlA1EDAdsB5wIfhAMqAwHAAacDH7MDNwMBrQGMAyOTAywDAagBmwMjogMsAwGjAcQDHdQDKAMBkAHVAx3dAygDAYgBTg/TARoCARbbARPsAR4CAQr/AR2eAigDAYcCoAJPoAJdAwGFAqMCJa8CMAMB9QHCAh3JAiYDAe8BygId0QImAwHnAdICHdkCJgMB4wHoAiH2AiwDAdEB9wIhgwMsAwHBAbADXrADZgMBvgGxA1yxA2sDAb0BqgNkqgNxAwG7AasDe6sDkgEDAbkBrANjrANwAwG3AakDdqkDfgMBtQGuA2muA3oDAbMBrQNprQN8AwGxAacD1wGnA/cBAwGwAa8DXK8DZwMBrgGRA16RA2kDAasBjgNfjgN2AwGpAaADUaADXAMBpgGdA1KdA18DAaQBxQMf0wMqAwGRAdYDH9wDNwMBiQFPEcgBHAIBIckBEdIBHAIBF9wBFeMBHgIBEeQBFesBHgIBC4ACH4QCMQMBmAKFAh+FApUBAwGVAoYCH50CJAMBiAKkAieuAj8DAfYBxwJLxwJWAwHyAcQCTMQCWQMB8AHPAkjPAtEBAwHqAcwCScwCVwMB6AHXAkzXAlUDAeYB1AJN1AJeAwHkAekCI+0CNQMB1gHuAiP1AiwDAdIB+AIjggM7AwHCAcYDIcoDMwMBmQHLAyHRAzMDAZUB0gMh0gOiAQMBkgHaA17aA2YDAY4B2ANc2ANwAwGNAdYD3AHWA4QCAwGMAdkDXNkDZwMBigFQE2MeAgF4ZBPHAR4CASLKARPRASsCARjhAUPhAU4CARTeAUTeAVECARLpAUDpAaABAgEO5gFB5gFPAgEMggJhggJzAwGZAoUChAGFApIBAwGWAoYCLYYCOwMBiQKIAiObAi4DAYsCqwJmqwJuAwGDAqwCZKwCdgMBggKoAnOoAoQBAwGAAqYCbqYCgQEDAf4BpwJ+pwKGAQMB/AGpAnSpAoUBAwH6AaQC4gGkAogCAwH5AaoCZKoCbwMB9wHrAmXrAncDAdcB8wJe8wJnAwHVAfACX/ACdgMB0wH+AmL+AmoDAc8BgANggANyAwHOAf0CZ/0CdAMBzAH7Anr7AoIBAwHKAfoCbfoCfgMByAH8Am38AoABAwHGAfgC3gH4AvkBAwHFAf8CYP8CawMBwwHIA2PIA20DAZoBzQNdzQNnAwGYAc8DYs8DkQEDAZcBzgNizgOTAQMBlgHSA48B0gOfAQMBkwFRFVgnAgF9WRVdJwIBe14VYicCAXllFWweAgF0bRXGARoCASPPAVLPAVoCAR/NAVDNAWMCAR7MAWrMAXICARzKAdABygH3AQIBG84BUM4BWwIBGYkCJZoCMAMBjAJVUVVfAwGEAVRPVFcDAYIBU15TiAEDAYABVlBWYgIBfltQW2cCAXxgV2BbAgF6akNqTAIBd2dEZ1ECAXVtI204AgEkbxnEASQCASaKAieRAjADAZECkgInmQIwAwGNAnAbeTMCAWl6G4ABMwIBYoEBG8MBIAIBJ48CUo8CegMBlAKMAlOMAmEDAZIClwJWlwJfAwGQApQCV5QCaAMBjgJ3WndiAgFydVh1ZwIBcXR0dHwCAW9w0wFw8wECAW5zYHN7AgFtdlh2YwIBa3JccmwCAWp8WnxiAgFnflh+aAIBZnrUAXr4AQIBZX1YfWMCAWOBASmBAY4BAgEogwEfwQEqAgEpigEhkwE5AgFVlAEhnwE5AgFEoAEhqgE5AgE1qwEhwAEmAgEqkQFgkQFoAgFgjwFejwFvAgFfjgFpjgF5AgFdjQFijQGRAQIBW4wBYowBbAIBWYoB2wGKAf0BAgFYkAFekAFpAgFWnQFgnQFoAgFTlgFnlgGLAQIBUZsBXpsBcgIBUJoBX5oBZgIBTpgBbpgBeAIBTJkBYJkBqQECAUqXAWOXAY8BAgFIlAHeAZQBkAICAUecAV6cAWkCAUWnAWCnAWgCAUKiAWeiAYsBAgFApgFepgF2AgE/owFdowFkAgE9oAHiAaABnwICATyoAV6oAWkCATqkAWGkAYsBAgE4pQF2pQGRAQIBNqsBL6sBuwECASutASW0AS4CATC3ASW+AS4CASyyAVKyAZcBAgEzrwFRrwFrAgExvAFQvAFTAgEvuQFRuQFrAgEt</sads:DebugSymbol.Symbol>
  </StateMachine>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="AddLogFields_25" sap:VirtualizedContainerService.HintSize="200,109">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="AddLogFields_26" sap:VirtualizedContainerService.HintSize="200,64">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="AddLogFields_27" sap:VirtualizedContainerService.HintSize="200,49">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_101" sap:VirtualizedContainerService.HintSize="825,426">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_51" sap:VirtualizedContainerService.HintSize="803,60" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_46" sap:VirtualizedContainerService.HintSize="656,87" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_47" sap:VirtualizedContainerService.HintSize="656,87" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_48" sap:VirtualizedContainerService.HintSize="509,87" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_49" sap:VirtualizedContainerService.HintSize="509,87" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_50" sap:VirtualizedContainerService.HintSize="509,87" />
      <sap2010:ViewStateData Id="Assign_52" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_53" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_19" sap:VirtualizedContainerService.HintSize="509,208">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_102" sap:VirtualizedContainerService.HintSize="531,713">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_20" sap:VirtualizedContainerService.HintSize="656,861">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_103" sap:VirtualizedContainerService.HintSize="678,1239">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_21" sap:VirtualizedContainerService.HintSize="803,1387">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_104" sap:VirtualizedContainerService.HintSize="825,1611">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_105" sap:VirtualizedContainerService.HintSize="847,2201">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_51" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Sequence_106" sap:VirtualizedContainerService.HintSize="847,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_107" sap:VirtualizedContainerService.HintSize="869,2416">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_41" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_46" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Sequence_98" sap:VirtualizedContainerService.HintSize="264,284">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_3" sap:VirtualizedContainerService.HintSize="873,21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_2" sap:VirtualizedContainerService.HintSize="887,2643">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="AddLogFields_19" sap:VirtualizedContainerService.HintSize="464,49">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ShouldStop_3" sap:VirtualizedContainerService.HintSize="464,22" />
      <sap2010:ViewStateData Id="Assign_45" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_33" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Sequence_61" sap:VirtualizedContainerService.HintSize="264,284">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_62" sap:VirtualizedContainerService.HintSize="286,408">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_18" sap:VirtualizedContainerService.HintSize="464,556">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_49" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_42" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Sequence_86" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_35">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">350,474.5</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowDecision_2" sap:VirtualizedContainerService.HintSize="134,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <av:Point x:Key="ShapeLocation">243,266.5</av:Point>
            <av:Size x:Key="ShapeSize">134,87</av:Size>
            <av:PointCollection x:Key="FalseConnector">377,310 450,310 450,474.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_13">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">210,164.5</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">310,215.5 310,266.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Flowchart_4" sap:VirtualizedContainerService.HintSize="614,636">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <av:Point x:Key="ShapeLocation">280,32.5</av:Point>
            <av:Size x:Key="ShapeSize">60,75</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">310,107.5 310,164.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_42" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_47" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_32" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Sequence_53" sap:VirtualizedContainerService.HintSize="264,384">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_9" sap:VirtualizedContainerService.HintSize="400,453">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_8" sap:VirtualizedContainerService.HintSize="414,702">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="AddLogFields_30" sap:VirtualizedContainerService.HintSize="242,49">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_54" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Sequence_116" sap:VirtualizedContainerService.HintSize="336,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_53" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Sequence_117" sap:VirtualizedContainerService.HintSize="336,211">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_118" sap:VirtualizedContainerService.HintSize="358,426">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_49" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Catch`1_1" sap:VirtualizedContainerService.HintSize="404,21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_48" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Catch`1_2" sap:VirtualizedContainerService.HintSize="404,21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_44" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="TryCatch_1" sap:VirtualizedContainerService.HintSize="418,675">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Transition_4" sap:VirtualizedContainerService.HintSize="429.6,509.6">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:PointCollection x:Key="ConnectorLocation">348.3,522 348.3,536.9 538.5,536.9 538.5,56.9 508.5,56.9</av:PointCollection>
            <x:Int32 x:Key="SrcConnectionPointIndex">23</x:Int32>
            <x:Int32 x:Key="DestConnectionPointIndex">40</x:Int32>
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Transition_1" sap:VirtualizedContainerService.HintSize="429.6,509.6">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:PointCollection x:Key="ConnectorLocation">401.05,522 401.05,540.6 535.5,540.6 535.5,210.6 505.5,210.6</av:PointCollection>
            <x:Int32 x:Key="SrcConnectionPointIndex">43</x:Int32>
            <x:Int32 x:Key="DestConnectionPointIndex">20</x:Int32>
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Transition_5" sap:VirtualizedContainerService.HintSize="429.6,553.6">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:PointCollection x:Key="ConnectorLocation">443.25,522 443.25,549.4 535.5,549.4 535.5,249.4 505.5,249.4</av:PointCollection>
            <x:Int32 x:Key="SrcConnectionPointIndex">59</x:Int32>
            <x:Int32 x:Key="DestConnectionPointIndex">52</x:Int32>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="State_3" sap:VirtualizedContainerService.HintSize="211,142">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">285,380</av:Point>
            <av:Size x:Key="ShapeSize">211,142</av:Size>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Double x:Key="StateContainerWidth">197</x:Double>
            <x:Double x:Key="StateContainerHeight">34</x:Double>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Transition_6" sap:VirtualizedContainerService.HintSize="430,796">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:PointCollection x:Key="ConnectorLocation">390,278.5 390,308.5 390.5,308.5 390.5,380</av:PointCollection>
            <x:Int32 x:Key="SrcConnectionPointIndex">39</x:Int32>
            <x:Int32 x:Key="DestConnectionPointIndex">38</x:Int32>
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="AddLogFields_28" sap:VirtualizedContainerService.HintSize="314,49">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="AddLogFields_29" sap:VirtualizedContainerService.HintSize="314,94">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_36" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Sequence_110" sap:VirtualizedContainerService.HintSize="336,438">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_111" sap:VirtualizedContainerService.HintSize="336,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_52" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Sequence_112" sap:VirtualizedContainerService.HintSize="336,211">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_113" sap:VirtualizedContainerService.HintSize="358,426">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="State_1" sap:VirtualizedContainerService.HintSize="124,104">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">73,188.5</av:Point>
            <av:Size x:Key="ShapeSize">124,104</av:Size>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Double x:Key="StateContainerWidth">110</x:Double>
            <x:Double x:Key="StateContainerHeight">26</x:Double>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_50" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Transition_7" sap:VirtualizedContainerService.HintSize="430,853">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:PointCollection x:Key="ConnectorLocation">390,278.5 390,308.5 135,308.5 135,292.5</av:PointCollection>
            <x:Int32 x:Key="SrcConnectionPointIndex">39</x:Int32>
            <x:Int32 x:Key="DestConnectionPointIndex">39</x:Int32>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="State_4" sap:VirtualizedContainerService.HintSize="231,97">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">274.5,181.5</av:Point>
            <av:Size x:Key="ShapeSize">231,97</av:Size>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Double x:Key="StateContainerWidth">217</x:Double>
            <x:Double x:Key="StateContainerHeight">34</x:Double>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Transition_2" sap:VirtualizedContainerService.HintSize="430,796">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Int32 x:Key="SrcConnectionPointIndex">39</x:Int32>
            <x:Int32 x:Key="DestConnectionPointIndex">38</x:Int32>
            <av:PointCollection x:Key="ConnectorLocation">391.3,97.3 391.3,127.3 389.7,127.3 389.7,181.5</av:PointCollection>
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Transition_3" sap:VirtualizedContainerService.HintSize="430,796">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:PointCollection x:Key="ConnectorLocation">391.3,97.3 391.3,127.3 129.16,127.3 129.16,188.5</av:PointCollection>
            <x:Int32 x:Key="SrcConnectionPointIndex">39</x:Int32>
            <x:Int32 x:Key="DestConnectionPointIndex">34</x:Int32>
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="State_2" sap:VirtualizedContainerService.HintSize="913,3059">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">274.5,8.5</av:Point>
            <av:Size x:Key="ShapeSize">234,88</av:Size>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Double x:Key="StateContainerWidth">220</x:Double>
            <x:Double x:Key="StateContainerHeight">25</x:Double>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="StateMachine_1" sap:VirtualizedContainerService.HintSize="786,786">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <av:Point x:Key="ShapeLocation">70,22.4</av:Point>
            <x:Double x:Key="StateContainerWidth">772</x:Double>
            <x:Double x:Key="StateContainerHeight">708</x:Double>
            <av:PointCollection x:Key="ConnectorLocation">130,60 160,60 160,52.9 274.5,52.9</av:PointCollection>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Main2_1" sap:VirtualizedContainerService.HintSize="826,906" />
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>