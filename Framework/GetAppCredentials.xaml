<Activity mc:Ignorable="sap sap2010 sads" x:Class="GetCredentials" this:GetCredentials.in_Credential="TestRobot-Credential"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities"
 xmlns:s="clr-namespace:System;assembly=mscorlib"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:ss="clr-namespace:System.Security;assembly=mscorlib"
 xmlns:this="clr-namespace:"
 xmlns:ui="http://schemas.uipath.com/workflow/activities"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="out_Username" Type="OutArgument(x:String)" />
    <x:Property Name="in_Credential" Type="InArgument(x:String)" />
    <x:Property Name="out_Password" Type="OutArgument(ss:SecureString)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap2010:WorkflowViewState.IdRef>GetCredentials_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Framework.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Security</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.Core</AssemblyReference>
      <AssemblyReference>UiPath.Framework.Activities</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>TimeSpan2</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <TryCatch sap2010:Annotation.AnnotationText="Usage: Change in_Credential to a previously created Orchestrator asset or a Windows credential and use outputs out_Username and out_Password. Description: This workflow securely fetches or creates and uses a set of credentials defined at it's input. It first tries to fetch them from Orchestrator. Failing that, it tries to fetch them from the Windows credential manager. If they do not exist, it creates them and then outputs them. " DisplayName="Private: Try Get Credential Asset">
    <TryCatch.Variables>
      <Variable x:TypeArguments="x:String" Name="stringPassword" />
    </TryCatch.Variables>
    <TryCatch.Try>
      <ui:GetRobotCredential TimeoutMS="{x:Null}" AssetName="[in_Credential]" DisplayName="Get Orchestrator Credential" Password="[out_Password]" Username="[out_Username]" sap2010:WorkflowViewState.IdRef="GetRobotCredential_5" />
    </TryCatch.Try>
    <TryCatch.Catches>
      <Catch x:TypeArguments="s:Exception">
        <ActivityAction x:TypeArguments="s:Exception">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
          </ActivityAction.Argument>
          <If Condition="[out_Username is Nothing or out_Password is Nothing]" DisplayName="Private: Fetch local">
            <If.Then>
              <Sequence DisplayName="Private: Get from Credential Store">
                <Sequence.Variables>
                  <Variable x:TypeArguments="x:Boolean" Name="credentialFound" />
                </Sequence.Variables>
                <ui:GetSecureCredential CredentialType="Generic" DisplayName="Get secure credential" Password="[out_Password]" PersistanceType="Enterprise" Result="[credentialFound]" Target="[in_Credential]" Username="[out_Username]" sap2010:WorkflowViewState.IdRef="GetSecureCredential_4" />
                <If Condition="[credentialFound]" DisplayName="If locally found">
                  <If.Else>
                    <Sequence DisplayName="Private: Request and Store Credentials">
                      <ui:RequestCredential DisplayName="Request Credential" Message="[&quot;Please provide &quot;&quot;&quot; + in_Credential + &quot;&quot;&quot; access credentials&quot;]" Password="[stringPassword]" Result="[credentialFound]" Title="Hello! This is Robot" Username="[out_Username]" sap2010:WorkflowViewState.IdRef="RequestCredential_5" />
                      <If Condition="[Not credentialFound]" DisplayName="If cancelled">
                        <If.Then>
                          <Throw DisplayName="Throw No Credentials" Exception="[new Exception(&quot;Credentials not supplied&quot;)]" sap2010:WorkflowViewState.IdRef="Throw_4" />
                        </If.Then>
                        <If.Else>
                          <ui:AddCredential CredentialType="Generic" DisplayName="Add Credential" Password="[stringPassword]" PersistanceType="Enterprise" Target="[in_Credential]" Username="[out_Username]" sap2010:WorkflowViewState.IdRef="AddCredential_5" />
                        </If.Else>
                        <sap2010:WorkflowViewState.IdRef>If_12</sap2010:WorkflowViewState.IdRef>
                      </If>
                      <Assign DisplayName="Make Secure Password">
                        <Assign.To>
                          <OutArgument x:TypeArguments="ss:SecureString">[out_Password]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="ss:SecureString">[new SecureString()]</InArgument>
                        </Assign.Value>
                        <sap2010:WorkflowViewState.IdRef>Assign_18</sap2010:WorkflowViewState.IdRef>
                      </Assign>
                      <ui:ForEach x:TypeArguments="x:Char" DisplayName="For each&lt;char&gt;" Values="[stringPassword.ToCharArray]">
                        <ui:ForEach.Body>
                          <ActivityAction x:TypeArguments="x:Char">
                            <ActivityAction.Argument>
                              <DelegateInArgument x:TypeArguments="x:Char" Name="key" />
                            </ActivityAction.Argument>
                            <InvokeMethod DisplayName="Invoke AppendChar" MethodName="AppendChar">
                              <InvokeMethod.TargetObject>
                                <InArgument x:TypeArguments="ss:SecureString">[out_Password]</InArgument>
                              </InvokeMethod.TargetObject>
                              <InArgument x:TypeArguments="x:Char">[key]</InArgument>
                              <sap2010:WorkflowViewState.IdRef>InvokeMethod_4</sap2010:WorkflowViewState.IdRef>
                            </InvokeMethod>
                          </ActivityAction>
                        </ui:ForEach.Body>
                        <sap2010:WorkflowViewState.IdRef>ForEach`1_7</sap2010:WorkflowViewState.IdRef>
                      </ui:ForEach>
                      <sap2010:WorkflowViewState.IdRef>Sequence_26</sap2010:WorkflowViewState.IdRef>
                    </Sequence>
                  </If.Else>
                  <sap2010:WorkflowViewState.IdRef>If_13</sap2010:WorkflowViewState.IdRef>
                </If>
                <sap2010:WorkflowViewState.IdRef>Sequence_27</sap2010:WorkflowViewState.IdRef>
              </Sequence>
            </If.Then>
            <sap2010:WorkflowViewState.IdRef>If_14</sap2010:WorkflowViewState.IdRef>
          </If>
        </ActivityAction>
        <sap2010:WorkflowViewState.IdRef>Catch`1_7</sap2010:WorkflowViewState.IdRef>
      </Catch>
    </TryCatch.Catches>
    <TryCatch.Finally>
      <Sequence DisplayName="Return" sap2010:WorkflowViewState.IdRef="Sequence_28" />
    </TryCatch.Finally>
    <sap2010:WorkflowViewState.IdRef>TryCatch_7</sap2010:WorkflowViewState.IdRef>
    <sads:DebugSymbol.Symbol>d3RDOlxVc2Vyc1xtaWhhaS5kdW5hcmVhbnVcR29vZ2xlIERyaXZlXFdvcmtzcGFjZVxVaVBhdGhcVGVtcGxhdGVzXFVpUGF0aF9SRUZyYW1ld29ya1xGcmFtZXdvcmtcR2V0QXBwQ3JlZGVudGlhbHMueGFtbCgBZgF7AQJJA5cBDgIBAU4HTuYBAgE3kwEHkwFWAgE2VguNARACAQJOPU5OAgE8TpwBTqwBAgE6ToIBTpIBAgE4VhlWTwIBA1gPigEaAgEGXBFcpQICAS1dEYgBFgIBB1y/AVzQAQIBNFzaAVzqAQIBMlykAVy3AQIBMFxvXH8CAS5dH10yAgEIXxWFASACAQpgF2DmAgIBI2EXaRwCARdqF3IgAgETcxeDASQCAQtgVmC/AQIBK2CdAmCtAgIBKWDjAWD2AQIBJ2D9AWCTAgIBJmDJAWDbAQIBJGElYTwCARhjG2OzAQIBIWYbZoMCAgEab0lvXQIBFmxKbFgCARRzZnOEAQIBEXkdfywCAQxjT2OGAQIBImajAWa0AQIBH2a+AWbOAQIBHWZsZn4CARt9RH1JAgEPe097XQIBDQ==</sads:DebugSymbol.Symbol>
  </TryCatch>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="GetRobotCredential_5" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="GetSecureCredential_4" sap:VirtualizedContainerService.HintSize="611,22" />
      <sap2010:ViewStateData Id="RequestCredential_5" sap:VirtualizedContainerService.HintSize="464,22" />
      <sap2010:ViewStateData Id="Throw_4" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="AddCredential_5" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="If_12" sap:VirtualizedContainerService.HintSize="464,208" />
      <sap2010:ViewStateData Id="Assign_18" sap:VirtualizedContainerService.HintSize="464,60" />
      <sap2010:ViewStateData Id="InvokeMethod_4" sap:VirtualizedContainerService.HintSize="218,132" />
      <sap2010:ViewStateData Id="ForEach`1_7" sap:VirtualizedContainerService.HintSize="464,266" />
      <sap2010:ViewStateData Id="Sequence_26" sap:VirtualizedContainerService.HintSize="486,800">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_13" sap:VirtualizedContainerService.HintSize="611,948" />
      <sap2010:ViewStateData Id="Sequence_27" sap:VirtualizedContainerService.HintSize="633,1134">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_14" sap:VirtualizedContainerService.HintSize="758,1282" />
      <sap2010:ViewStateData Id="Catch`1_7" sap:VirtualizedContainerService.HintSize="404,21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_28" sap:VirtualizedContainerService.HintSize="200,100.8">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_7" sap:VirtualizedContainerService.HintSize="418,404">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="GetCredentials_1" sap:VirtualizedContainerService.HintSize="458,604" />
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>