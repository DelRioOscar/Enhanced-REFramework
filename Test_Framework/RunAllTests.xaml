<Activity mc:Ignorable="sap sap2010 sads" x:Class="RunAllTests" this:RunAllTests.in_LogResultsFolderPath="Test_Framework\Results"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities"
 xmlns:s="clr-namespace:System;assembly=mscorlib"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:sd="clr-namespace:System.Data;assembly=System.Data"
 xmlns:si="clr-namespace:System.IO;assembly=mscorlib"
 xmlns:this="clr-namespace:"
 xmlns:ui="http://schemas.uipath.com/workflow/activities"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_LogResultsFolderPath" Type="InArgument(x:String)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap2010:WorkflowViewState.IdRef>RunAllTests_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>Newtonsoft.Json</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.Core</AssemblyReference>
      <AssemblyReference>UiPath.Core.Activities</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
      <AssemblyReference>Microsoft.VisualStudio.Services.Common</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="Documentation for RunAllTests&#xA;&#xA;The tests input file contains a list tests. Each excel row is a test, consisting of the relative path of the workflow and number of runs. &#xA;&#xA;Each test is self-contained." DisplayName="RunAllTests" sap2010:WorkflowViewState.IdRef="Sequence_2">
    <Sequence.Variables>
      <Variable x:TypeArguments="sd:DataTable" Name="dtTests" />
      <Variable x:TypeArguments="x:Int32" Default="1" Name="testRowNumber" />
      <Variable x:TypeArguments="s:DateTime" Default="[now]" Name="runAllTests_StartTime" />
      <Variable x:TypeArguments="scg:List(scg:Dictionary(x:String, x:Object))" Default="[new system.Collections.Generic.list(of dictionary(of string,object))]" Name="Statistics" />
      <Variable x:TypeArguments="sd:DataTable" Name="dtStatistics" />
      <Variable x:TypeArguments="x:String" Name="CfgTestResultsSubfolder" />
    </Sequence.Variables>
    <Sequence DisplayName="Read Tests and initialize settings" sap2010:WorkflowViewState.IdRef="Sequence_30">
      <Sequence.Variables>
        <Variable x:TypeArguments="si:DirectoryInfo" Name="directoryInformation" />
      </Sequence.Variables>
      <ui:ReadRange Range="{x:Null}" AddHeaders="True" DataTable="[dtTests]" DisplayName="Read Tests Excel file" sap2010:WorkflowViewState.IdRef="ReadRange_2" SheetName="Tests" WorkbookPath="Test_Framework\_Tests.xlsx" />
      <Assign DisplayName="Create results sub-folder" sap2010:WorkflowViewState.IdRef="Assign_31">
        <Assign.To>
          <OutArgument x:TypeArguments="si:DirectoryInfo">[directoryInformation]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="si:DirectoryInfo">[io.Directory.CreateDirectory(path.Combine(Environment.CurrentDirectory, in_LogResultsFolderPath, "_Tests_Run"+runAllTests_StartTime.ToString("yyMMdd.hhmmss")))]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign DisplayName="Test Sub-folder" sap2010:WorkflowViewState.IdRef="Assign_28">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[CfgTestResultsSubFolder]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[directoryInformation.FullName]</InArgument>
        </Assign.Value>
      </Assign>
    </Sequence>
    <ui:ForEachRow sap2010:Annotation.AnnotationText="Each test generates it's own Audit log file, as well as its own statistics." DataTable="[dtTests]" DisplayName="For each test row" sap2010:WorkflowViewState.IdRef="ForEachRow_2">
      <ui:ForEachRow.Body>
        <ActivityAction x:TypeArguments="sd:DataRow">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
          </ActivityAction.Argument>
          <Sequence DisplayName="For each workflow tested build Results datatable" sap2010:WorkflowViewState.IdRef="Sequence_24">
            <Sequence.Variables>
              <Variable x:TypeArguments="scg:List(scg:Dictionary(x:String, x:Object))" Default="[new system.Collections.Generic.list(of dictionary(of string,object))]" Name="Audit" />
              <Variable x:TypeArguments="sd:DataTable" Name="dtAudit" />
            </Sequence.Variables>
            <While sap2010:Annotation.AnnotationText="Run each test the number of times it is prescribed.&#xA;This builds the Audit of the test. " DisplayName="While there are still tests to run for the current workflow" sap2010:WorkflowViewState.IdRef="While_2">
              <While.Variables>
                <Variable x:TypeArguments="x:Int32" Default="1" Name="testIterationIndex" />
              </While.Variables>
              <While.Condition>[testIterationIndex &lt;= cint(row.Item("Number of Runs"))]</While.Condition>
              <Sequence DisplayName="Log message and execute workflow" sap2010:WorkflowViewState.IdRef="Sequence_23">
                <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Trace" Message="[&quot;Running test no. &quot;+testIterationIndex.ToString + &quot; of worklow &quot;+row.Item(&quot;WorkflowFile&quot;).ToString]" />
                <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Tests workflows" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_11" UnSafe="False" WorkflowFileName="[row(&quot;WorkflowFile&quot;).ToString]">
                  <ui:InvokeWorkflowFile.Arguments>
                    <InArgument x:TypeArguments="x:String" x:Key="in_wbParentType">RunAllTests</InArgument>
                    <InArgument x:TypeArguments="x:Int32" x:Key="in_wbParentLevel">0</InArgument>
                    <InArgument x:TypeArguments="s:DateTime" x:Key="in_wbParentStart">[runAllTests_StartTime]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="in_wbParentPath">RunAllTests</InArgument>
                    <InArgument x:TypeArguments="x:Boolean" x:Key="in_wbFinalExec">True</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="in_wbHandleError">Failed</InArgument>
                    <InOutArgument x:TypeArguments="scg:List(scg:Dictionary(x:String, x:Object))" x:Key="io_Audit">[Audit]</InOutArgument>
                  </ui:InvokeWorkflowFile.Arguments>
                </ui:InvokeWorkflowFile>
                <Assign DisplayName="Increment index" sap2010:WorkflowViewState.IdRef="Assign_17">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:Int32">[testIterationIndex]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:Int32">[testIterationIndex+1]</InArgument>
                  </Assign.Value>
                </Assign>
              </Sequence>
            </While>
            <Sequence sap2010:Annotation.AnnotationText="Make the Audit available as a dt object. &#xA;This object is queryable for statistics. " DisplayName="Audit as datatable" sap2010:WorkflowViewState.IdRef="Sequence_26">
              <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke listOfDictToDT workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_9" UnSafe="False" WorkflowFileName="Framework\listOfDictToDT.xaml">
                <ui:InvokeWorkflowFile.Arguments>
                  <InArgument x:TypeArguments="scg:List(scg:Dictionary(x:String, x:Object))" x:Key="in_listOfDict">[Audit]</InArgument>
                  <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_dt">[dtAudit]</OutArgument>
                </ui:InvokeWorkflowFile.Arguments>
              </ui:InvokeWorkflowFile>
            </Sequence>
            <Sequence sap2010:Annotation.AnnotationText="Statistics for the test. &#xA;&#xA;You can generate the statistics by query-ing the Audit or dtAudit object.&#xA;&#xA;You can add your own statistics." DisplayName="Statistics" sap2010:WorkflowViewState.IdRef="Sequence_27">
              <Sequence.Variables>
                <Variable x:TypeArguments="scg:Dictionary(x:String, x:Object)" Default="[New system.Collections.Generic.Dictionary(Of String, Object)]" Name="mappedStatisticalData" />
              </Sequence.Variables>
              <InvokeMethod sap2010:Annotation.AnnotationText="Add key &quot;WorkflowFile&quot;, value" DisplayName="Add Key &quot;WorkflowFile&quot;, value" sap2010:WorkflowViewState.IdRef="InvokeMethod_3" MethodName="Add">
                <InvokeMethod.TargetObject>
                  <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)">[mappedStatisticalData]</InArgument>
                </InvokeMethod.TargetObject>
                <InArgument x:TypeArguments="x:String">WorkflowFile</InArgument>
                <InArgument x:TypeArguments="x:Object">[row("WorkflowFile").ToString]</InArgument>
              </InvokeMethod>
              <InvokeMethod sap2010:Annotation.AnnotationText="Add key &quot;NumberOfRuns&quot;, value" DisplayName="Add Key &quot;NumberOfRuns&quot;, value" sap2010:WorkflowViewState.IdRef="InvokeMethod_4" MethodName="Add">
                <InvokeMethod.TargetObject>
                  <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)">[mappedStatisticalData]</InArgument>
                </InvokeMethod.TargetObject>
                <InArgument x:TypeArguments="x:String">NumberOfRuns</InArgument>
                <InArgument x:TypeArguments="x:Object">[row.Item("Number of Runs").ToString+" configured, "+Audit.Count.ToString+" executed"]</InArgument>
              </InvokeMethod>
              <InvokeMethod sap2010:Annotation.AnnotationText="Add key &quot;AvgRunDurationSec&quot;, value" DisplayName="Add Key &quot;AvgRunDurationSec&quot;, value" sap2010:WorkflowViewState.IdRef="InvokeMethod_5" MethodName="Add">
                <InvokeMethod.TargetObject>
                  <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)">[mappedStatisticalData]</InArgument>
                </InvokeMethod.TargetObject>
                <InArgument x:TypeArguments="x:String">AvgRunDurationSec</InArgument>
                <InArgument x:TypeArguments="x:Object">[Audit.Average(Function(avg) convert.ToDouble(avg.item("wbDurationSec")))]</InArgument>
              </InvokeMethod>
              <InvokeMethod sap2010:Annotation.AnnotationText="Add key &quot;SumRunDurationSec&quot;, value" DisplayName="Add Key &quot;SumRunDurationSec&quot;, value" sap2010:WorkflowViewState.IdRef="InvokeMethod_6" MethodName="Add">
                <InvokeMethod.TargetObject>
                  <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)">[mappedStatisticalData]</InArgument>
                </InvokeMethod.TargetObject>
                <InArgument x:TypeArguments="x:String">SumRunDurationSec</InArgument>
                <InArgument x:TypeArguments="x:Object">[Audit.Sum(Function(sum) convert.ToDouble(sum.item("wbDurationSec")))]</InArgument>
              </InvokeMethod>
              <InvokeMethod sap2010:Annotation.AnnotationText="Add key &quot;AvgRunDurationHrs&quot;, value" DisplayName="Add Key &quot;AvgRunDurationHrs&quot;, value" sap2010:WorkflowViewState.IdRef="InvokeMethod_9" MethodName="Add">
                <InvokeMethod.TargetObject>
                  <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)">[mappedStatisticalData]</InArgument>
                </InvokeMethod.TargetObject>
                <InArgument x:TypeArguments="x:String">AvgRunDurationHrs</InArgument>
                <InArgument x:TypeArguments="x:Object">[Audit.Average(Function(avg) convert.ToDouble(avg.item("wbDurationHrs")))]</InArgument>
              </InvokeMethod>
              <InvokeMethod sap2010:Annotation.AnnotationText="Add key &quot;SumRunDurationHrs&quot;, value" DisplayName="Add Key &quot;SumRunDurationHrs&quot;, value" sap2010:WorkflowViewState.IdRef="InvokeMethod_10" MethodName="Add">
                <InvokeMethod.TargetObject>
                  <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)">[mappedStatisticalData]</InArgument>
                </InvokeMethod.TargetObject>
                <InArgument x:TypeArguments="x:String">SumRunDurationHrs</InArgument>
                <InArgument x:TypeArguments="x:Object">[Audit.Sum(Function(sum) convert.ToDouble(sum.item("wbDurationHrs")))]</InArgument>
              </InvokeMethod>
              <InvokeMethod sap2010:Annotation.AnnotationText="Add key &quot;wbStatusSuccess&quot;, value" DisplayName="Add Key &quot;wbStatusSuccess&quot;, value" sap2010:WorkflowViewState.IdRef="InvokeMethod_12" MethodName="Add">
                <InvokeMethod.TargetObject>
                  <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)">[mappedStatisticalData]</InArgument>
                </InvokeMethod.TargetObject>
                <InArgument x:TypeArguments="x:String">wbStatusSuccess</InArgument>
                <InArgument x:TypeArguments="x:Object">[Audit.Where(Function(x) x.Item("wbStatus").ToString.Trim.ToLower="successful").Count]</InArgument>
              </InvokeMethod>
              <InvokeMethod sap2010:Annotation.AnnotationText="Add key &quot;wbStatusFinishedWithEx&quot;, value" DisplayName="Add Key &quot;wbStatusFinishedWithEx&quot;, value" sap2010:WorkflowViewState.IdRef="InvokeMethod_13" MethodName="Add">
                <InvokeMethod.TargetObject>
                  <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)">[mappedStatisticalData]</InArgument>
                </InvokeMethod.TargetObject>
                <InArgument x:TypeArguments="x:String">wbStatusFinishedWithEx</InArgument>
                <InArgument x:TypeArguments="x:Object">[Audit.Where(Function(x) x.Item("wbStatus").ToString.Trim.ToLower="finished with exceptions").Count]</InArgument>
              </InvokeMethod>
              <InvokeMethod sap2010:Annotation.AnnotationText="Add key &quot;wbStatusFailed&quot;, value" DisplayName="Add Key &quot;wbStatusFailed&quot;, value" sap2010:WorkflowViewState.IdRef="InvokeMethod_14" MethodName="Add">
                <InvokeMethod.TargetObject>
                  <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)">[mappedStatisticalData]</InArgument>
                </InvokeMethod.TargetObject>
                <InArgument x:TypeArguments="x:String">wbStatusFailed</InArgument>
                <InArgument x:TypeArguments="x:Object">[Audit.Where(Function(x) x.Item("wbStatus").ToString.Trim.ToLower="failed").Count]</InArgument>
              </InvokeMethod>
              <InvokeMethod sap2010:Annotation.AnnotationText="Add key &quot;TopExceptionType&quot;, value" DisplayName="Add Key &quot;TopExceptionType&quot;, value" sap2010:WorkflowViewState.IdRef="InvokeMethod_16" MethodName="Add">
                <InvokeMethod.TargetObject>
                  <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)">[mappedStatisticalData]</InArgument>
                </InvokeMethod.TargetObject>
                <InArgument x:TypeArguments="x:String">TopExceptionType</InArgument>
                <InArgument x:TypeArguments="x:Object">[if(Audit.Where(Function(failed) not(string.IsNullOrEmpty(failed.Item("wbExceptionType").ToString))).GroupBy(Function(status) status.Item("wbExceptionType")).OrderByDescending(Function(x) x.Count).Any, Audit.Where(Function(failed) not(string.IsNullOrEmpty(failed.Item("wbExceptionType").ToString))).GroupBy(Function(status) status.Item("wbExceptionType")).OrderByDescending(Function(x) x.Count).First.Key, "No Exceptions")]</InArgument>
              </InvokeMethod>
              <InvokeMethod sap2010:Annotation.AnnotationText="Add key &quot;TopExceptionCnt&quot;, value" DisplayName="Add Key &quot;TopExceptionCnt&quot;, value" sap2010:WorkflowViewState.IdRef="InvokeMethod_17" MethodName="Add">
                <InvokeMethod.TargetObject>
                  <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)">[mappedStatisticalData]</InArgument>
                </InvokeMethod.TargetObject>
                <InArgument x:TypeArguments="x:String">TopExceptionCnt</InArgument>
                <InArgument x:TypeArguments="x:Object">[if(Audit.Where(Function(failed) not(string.IsNullOrEmpty(failed.Item("wbExceptionType").ToString))).GroupBy(Function(status) status.Item("wbExceptionType")).OrderByDescending(Function(x) x.Count).Any, Audit.Where(Function(failed) not(string.IsNullOrEmpty(failed.Item("wbExceptionType").ToString))).GroupBy(Function(status) status.Item("wbExceptionType")).OrderByDescending(Function(x) x.Count).First.Count, 0)]</InArgument>
              </InvokeMethod>
              <InvokeMethod sap2010:Annotation.AnnotationText="Add key &quot;wbConfigError&quot;, value" DisplayName="Add Key &quot;wbConfigError&quot;, value" sap2010:WorkflowViewState.IdRef="InvokeMethod_8" MethodName="Add">
                <InvokeMethod.TargetObject>
                  <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)">[mappedStatisticalData]</InArgument>
                </InvokeMethod.TargetObject>
                <InArgument x:TypeArguments="x:String">wbConfigError</InArgument>
                <InArgument x:TypeArguments="x:Object">[If(Audit.Where(Function(x) Convert.ToBoolean(x.Item("configError"))).Count &gt; 0, true, false)]</InArgument>
              </InvokeMethod>
              <InvokeMethod DisplayName="Add test statistics" sap2010:WorkflowViewState.IdRef="InvokeMethod_1" MethodName="Add">
                <InvokeMethod.TargetObject>
                  <InArgument x:TypeArguments="scg:List(scg:Dictionary(x:String, x:Object))">[Statistics]</InArgument>
                </InvokeMethod.TargetObject>
                <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)">[mappedStatisticalData]</InArgument>
              </InvokeMethod>
            </Sequence>
            <TryCatch DisplayName="Try to save CSV report" sap2010:WorkflowViewState.IdRef="TryCatch_5">
              <TryCatch.Try>
                <Sequence DisplayName="Save CSV" sap2010:WorkflowViewState.IdRef="Sequence_25">
                  <ui:WriteCsvFile Encoding="{x:Null}" AddHeaders="True" DataTable="[dtAudit]" Delimitator="Comma" DisplayName="Write report to CSV" FilePath="[path.Combine(CfgTestResultsSubfolder, &quot;testNumber_&quot;+testRowNumber.ToString+&quot;_&quot;+path.GetFileNameWithoutExtension(row(&quot;WorkflowFile&quot;).ToString)+&quot;_&quot;+ Now.ToString(&quot;yyMMdd.hhmmss&quot;)+&quot;.csv&quot;)]" sap2010:WorkflowViewState.IdRef="WriteCsvFile_2" />
                </Sequence>
              </TryCatch.Try>
              <TryCatch.Catches>
                <Catch x:TypeArguments="si:IOException" sap2010:WorkflowViewState.IdRef="Catch`1_7">
                  <ActivityAction x:TypeArguments="si:IOException">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="si:IOException" Name="exception" />
                    </ActivityAction.Argument>
                    <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_5" Level="Warn" Message="[&quot;Could not save report to &quot;+path.Combine(CfgTestResultsSubfolder, &quot;testNumber_&quot;+testRowNumber.ToString+&quot;_&quot;+path.GetFileNameWithoutExtension(row(&quot;WorkflowFile&quot;).ToString)+&quot;_&quot;+ Now.ToString(&quot;yyMMdd.hhmmss&quot;)+&quot;.csv&quot;)+ &quot;, check permissions. Exception &quot;+exception.Message+&quot; at Source &quot;+exception.Source]" />
                  </ActivityAction>
                </Catch>
                <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_8">
                  <ActivityAction x:TypeArguments="s:Exception">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                    </ActivityAction.Argument>
                    <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_6" Level="Warn" Message="[exception.ToString]" />
                  </ActivityAction>
                </Catch>
              </TryCatch.Catches>
            </TryCatch>
            <Assign DisplayName="Inc test Number" sap2010:WorkflowViewState.IdRef="Assign_19">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Int32">[testRowNumber]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Int32">[testRowNumber+1]</InArgument>
              </Assign.Value>
            </Assign>
          </Sequence>
        </ActivityAction>
      </ui:ForEachRow.Body>
    </ui:ForEachRow>
    <Sequence sap2010:Annotation.AnnotationText="Make the Statistics available as a dt object. " DisplayName="Statistics as datatable" sap2010:WorkflowViewState.IdRef="Sequence_29">
      <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke listOfDictToDT workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_10" UnSafe="False" WorkflowFileName="Framework\listOfDictToDT.xaml">
        <ui:InvokeWorkflowFile.Arguments>
          <InArgument x:TypeArguments="scg:List(scg:Dictionary(x:String, x:Object))" x:Key="in_listOfDict">[Statistics]</InArgument>
          <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_dt">[dtStatistics]</OutArgument>
        </ui:InvokeWorkflowFile.Arguments>
      </ui:InvokeWorkflowFile>
    </Sequence>
    <TryCatch DisplayName="Save Statistics" sap2010:WorkflowViewState.IdRef="TryCatch_6">
      <TryCatch.Try>
        <Sequence DisplayName="Save CSV" sap2010:WorkflowViewState.IdRef="Sequence_31">
          <ui:WriteCsvFile Encoding="{x:Null}" AddHeaders="True" DataTable="[dtStatistics]" Delimitator="Comma" DisplayName="Write report to CSV" FilePath="[path.Combine(CfgTestResultsSubfolder, &quot;_Results.csv&quot;)]" sap2010:WorkflowViewState.IdRef="WriteCsvFile_3" />
        </Sequence>
      </TryCatch.Try>
      <TryCatch.Catches>
        <Catch x:TypeArguments="si:IOException" sap2010:WorkflowViewState.IdRef="Catch`1_9">
          <ActivityAction x:TypeArguments="si:IOException">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="si:IOException" Name="exception" />
            </ActivityAction.Argument>
            <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_7" Level="Warn" Message="[&quot;Could not save report to &quot;+path.Combine(CfgTestResultsSubfolder, &quot;_Results.csv&quot;)+ &quot;, check permissions. Exception &quot;+exception.Message+&quot; at Source &quot;+exception.Source]" />
          </ActivityAction>
        </Catch>
        <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_10">
          <ActivityAction x:TypeArguments="s:Exception">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
            </ActivityAction.Argument>
            <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_8" Level="Warn" Message="[exception.ToString]" />
          </ActivityAction>
        </Catch>
      </TryCatch.Catches>
    </TryCatch>
    <sads:DebugSymbol.Symbol>d3NDOlxVc2Vyc1xtaWhhaS5kdW5hcmVhbnVcR29vZ2xlIERyaXZlXFdvcmtzcGFjZVxVaVBhdGhcVGVtcGxhdGVzXFVpUGF0aF9SRUZyYW1ld29ya1xUZXN0X0ZyYW1ld29ya1xSdW5BbGxUZXN0cy54YW1segFqAYEBAQJNA8ECDgIBAVAzUDYCAQRRNlE9AgEDUlhSoAECAQJWBWsQAwGMAWwFngIVAgEXnwIFpgIQAgEQpwIFvwIQAgEFWgda3gEDAZYBWwdiEAMBkgFjB2oQAwGNAWyOAWyZAQMBigFyC5sCFgIBGKACB6UCHwIBEakCCasCFAIBC7MCDbMCzgICAQm7Ag27ApMBAgEGWkJaTQMBmQFaqgFasQEDAZgBWr8BWtsBAwGXAWA6YNsBAwGVAV07XVEDAZMBaDJoUQMBkAFlM2VMAwGOAXRgdKgBAgEZdw2SARUCAXSTAQ2aARgCAW2bAQ35ARgCASr6AQ2SAhgCAR+TAg2aAhYCARqiAmyiAngCARWjAkajAlQCAROgAr4BoALdAQIBEqoCC6oCkwICAQyzAnqzAssCAgEKuwJ6uwKQAQIBB3k9eUACAXV8D5EBGgIBd3sge1sCAXaUAQ+ZAScCAW6dAVidAZgBAgErnwEPpQEeAgFopgEPrAEeAgFjrQEPswEeAgFetAEPugEeAgFZuwEPwQEeAgFUwgEPyAEeAgFPyQEPzwEeAgFK0AEP1gEeAgFF1wEP3QEeAgFA3gEP5AEeAgE75QEP6wEeAgE27AEP8gEeAgEx8wEP+AEeAgEs/AER/gEcAgElhgIVhgKLBAIBI44CFY4CmwECASCYAjeYAkgCAR2VAjiVAkcCARuqAkyqAlwCAQ6qApwBqgLfAQIBDX0RfYYCAwGIAX4RiAEpAgF9iQERkAEaAgF4lgF0lgF7AgFylwFOlwFXAgFwlAHFAZQB5AECAW+kATikAVYCAWyjATijAUQCAWuhAVShAWsCAWmrATirAY4BAgFnqgE4qgFEAgFmqAFUqAFrAgFksgE4sgGCAQIBYrEBOLEBSQIBYa8BVK8BawIBX7kBOLkBfgIBXbgBOLgBSQIBXLYBVLYBawIBWsABOMABggECAVi/ATi/AUkCAVe9AVS9AWsCAVXHATjHAX4CAVPGATjGAUkCAVLEAVTEAWsCAVDOATjOAY4BAgFOzQE4zQFHAgFNywFUywFrAgFL1QE41QGcAQIBSdQBONQBTgIBSNIBVNIBawIBRtwBONwBigECAUTbATjbAUYCAUPZAVTZAWsCAUHjATjjAd8DAgE/4gE44gFIAgE+4AFU4AFrAgE86gE46gHTAwIBOukBOOkBRwIBOecBVOcBawIBN/EBOPEBmQECATXwATjwAUUCATTuAVTuAWsCATL1AV71AWoCAS/3AVL3AWkCAS39ARP9AcsDAgEmhgKCAYYCiAQCASSOAoIBjgKYAQIBIX1/fYMCAwGJAYYBdIYBewMBhgGAAVSAAV8DAYUBggFXggFuAwGDAYMBVIMBXwMBggGBAVSBAVUDAYEBhAFUhAFYAwGAAX7AAX7qAQIBf4UBVYUBWwIBfo4BO44BUQIBe4sBPIsBUAIBef0BVP0BXwIBKP0BnwH9AZcDAgEn</sads:DebugSymbol.Symbol>
  </Sequence>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="ReadRange_2" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Assign_31" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_28" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Sequence_30" sap:VirtualizedContainerService.HintSize="516,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_2" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_11" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Assign_17" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Sequence_23" sap:VirtualizedContainerService.HintSize="336,442">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="While_2" sap:VirtualizedContainerService.HintSize="464,642">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_9" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Sequence_26" sap:VirtualizedContainerService.HintSize="464,123">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeMethod_3" sap:VirtualizedContainerService.HintSize="218,159">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeMethod_4" sap:VirtualizedContainerService.HintSize="218,159">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeMethod_5" sap:VirtualizedContainerService.HintSize="218,174">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeMethod_6" sap:VirtualizedContainerService.HintSize="218,174">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeMethod_9" sap:VirtualizedContainerService.HintSize="218,174">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeMethod_10" sap:VirtualizedContainerService.HintSize="218,174">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeMethod_12" sap:VirtualizedContainerService.HintSize="218,174">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeMethod_13" sap:VirtualizedContainerService.HintSize="218,174">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeMethod_14" sap:VirtualizedContainerService.HintSize="218,159">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeMethod_16" sap:VirtualizedContainerService.HintSize="218,174">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeMethod_17" sap:VirtualizedContainerService.HintSize="218,174">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeMethod_8" sap:VirtualizedContainerService.HintSize="218,159">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeMethod_1" sap:VirtualizedContainerService.HintSize="218,132" />
      <sap2010:ViewStateData Id="Sequence_27" sap:VirtualizedContainerService.HintSize="464,2881">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WriteCsvFile_2" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Sequence_25" sap:VirtualizedContainerService.HintSize="336,211">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_5" sap:VirtualizedContainerService.HintSize="314,93" />
      <sap2010:ViewStateData Id="Catch`1_7" sap:VirtualizedContainerService.HintSize="404,22">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_6" sap:VirtualizedContainerService.HintSize="314,93" />
      <sap2010:ViewStateData Id="Catch`1_8" sap:VirtualizedContainerService.HintSize="404,22">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_5" sap:VirtualizedContainerService.HintSize="242,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_19" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Sequence_24" sap:VirtualizedContainerService.HintSize="486,4041">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEachRow_2" sap:VirtualizedContainerService.HintSize="516,4216">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_10" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Sequence_29" sap:VirtualizedContainerService.HintSize="516,93">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WriteCsvFile_3" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Sequence_31" sap:VirtualizedContainerService.HintSize="336,211">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_7" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Catch`1_9" sap:VirtualizedContainerService.HintSize="400,21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_8" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Catch`1_10" sap:VirtualizedContainerService.HintSize="400,21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_6" sap:VirtualizedContainerService.HintSize="516,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_2" sap:VirtualizedContainerService.HintSize="538,4757">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="RunAllTests_1" sap:VirtualizedContainerService.HintSize="578,4837" />
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>